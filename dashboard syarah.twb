<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook original-version='18.1' source-build='2024.3.0 (20243.24.1010.1014)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <DatagraphCoreV1 />
    <_.fcp.DatagraphNodeAxisTitle.true...DatagraphNodeAxisTitle />
    <DatagraphNodeSingleValueFieldV1 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='dashboardsyarah' path='/workbooks' revision='1.1' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Bins' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
        <calculation class='tableau' formula='10' />
        <range max='10' min='1' />
      </column>
      <column alias='Price' caption='Settings Parameter' datatype='real' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='1.'>
        <calculation class='tableau' formula='1.' />
        <aliases>
          <alias key='1.' value='Price' />
          <alias key='2.' value='Mileage' />
          <alias key='3.' value='Engine Size' />
        </aliases>
        <members>
          <member alias='Price' value='1.' />
          <member alias='Mileage' value='2.' />
          <member alias='Engine Size' value='3.' />
        </members>
      </column>
      <column alias='Make' caption='Setting Categories' datatype='real' name='[Parameter 3]' param-domain-type='list' role='measure' type='quantitative' value='1.'>
        <calculation class='tableau' formula='1.' />
        <aliases>
          <alias key='1.' value='Make' />
          <alias key='2.' value='Type' />
        </aliases>
        <members>
          <member alias='Make' value='1.' />
          <member alias='Type' value='2.' />
        </members>
      </column>
    </datasource>
    <datasource caption='df_copy_saudi_arabia_used_cars' inline='true' name='federated.0ghroqu0hu96w1176gath0i824jp' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df_copy_saudi_arabia_used_cars' name='textscan.1hiurd90tbqfew16xoket0hve89v'>
            <connection class='textscan' directory='C:/Users/ADIT/Downloads' filename='df_copy_saudi_arabia_used_cars.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1hiurd90tbqfew16xoket0hve89v' name='df_copy_saudi_arabia_used_cars.csv' table='[df_copy_saudi_arabia_used_cars#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_ID' separator=','>
            <column datatype='string' name='Type' ordinal='0' />
            <column datatype='string' name='Region' ordinal='1' />
            <column datatype='string' name='Make' ordinal='2' />
            <column datatype='string' name='Gear_Type' ordinal='3' />
            <column datatype='string' name='Origin' ordinal='4' />
            <column datatype='string' name='Options' ordinal='5' />
            <column datatype='integer' name='Year' ordinal='6' />
            <column datatype='real' name='Engine_Size' ordinal='7' />
            <column datatype='integer' name='Mileage' ordinal='8' />
            <column datatype='integer' name='Price' ordinal='9' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[df_copy_saudi_arabia_used_cars.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;IDR&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_ID&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Type]</local-name>
            <parent-name>[df_copy_saudi_arabia_used_cars.csv]</parent-name>
            <remote-alias>Type</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[df_copy_saudi_arabia_used_cars.csv_1BC17371FBEE446B87B9B5FCD6E7F66A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[df_copy_saudi_arabia_used_cars.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[df_copy_saudi_arabia_used_cars.csv_1BC17371FBEE446B87B9B5FCD6E7F66A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Make</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Make]</local-name>
            <parent-name>[df_copy_saudi_arabia_used_cars.csv]</parent-name>
            <remote-alias>Make</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[df_copy_saudi_arabia_used_cars.csv_1BC17371FBEE446B87B9B5FCD6E7F66A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gear_Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Gear_Type]</local-name>
            <parent-name>[df_copy_saudi_arabia_used_cars.csv]</parent-name>
            <remote-alias>Gear_Type</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[df_copy_saudi_arabia_used_cars.csv_1BC17371FBEE446B87B9B5FCD6E7F66A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Origin</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Origin]</local-name>
            <parent-name>[df_copy_saudi_arabia_used_cars.csv]</parent-name>
            <remote-alias>Origin</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[df_copy_saudi_arabia_used_cars.csv_1BC17371FBEE446B87B9B5FCD6E7F66A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Options</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Options]</local-name>
            <parent-name>[df_copy_saudi_arabia_used_cars.csv]</parent-name>
            <remote-alias>Options</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[df_copy_saudi_arabia_used_cars.csv_1BC17371FBEE446B87B9B5FCD6E7F66A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[df_copy_saudi_arabia_used_cars.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_copy_saudi_arabia_used_cars.csv_1BC17371FBEE446B87B9B5FCD6E7F66A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Engine_Size</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Engine_Size]</local-name>
            <parent-name>[df_copy_saudi_arabia_used_cars.csv]</parent-name>
            <remote-alias>Engine_Size</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_copy_saudi_arabia_used_cars.csv_1BC17371FBEE446B87B9B5FCD6E7F66A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mileage</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Mileage]</local-name>
            <parent-name>[df_copy_saudi_arabia_used_cars.csv]</parent-name>
            <remote-alias>Mileage</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_copy_saudi_arabia_used_cars.csv_1BC17371FBEE446B87B9B5FCD6E7F66A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Price</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Price]</local-name>
            <parent-name>[df_copy_saudi_arabia_used_cars.csv]</parent-name>
            <remote-alias>Price</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_copy_saudi_arabia_used_cars.csv_1BC17371FBEE446B87B9B5FCD6E7F66A]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='p. Price / Mileage/ Engine Size' datatype='real' name='[Calculation_214202486568828928]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='case [Parameters].[Parameter 2]&#13;&#10;when 1 then [Price]&#13;&#10;when 2 then [Mileage]&#13;&#10;when 3 then [Engine_Size]&#13;&#10;END' />
      </column>
      <column caption='Categories' datatype='string' name='[Calculation_214202486571724801]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 3]&#13;&#10;when 1 then [Make]&#13;&#10;WHEN 2 then [Type]&#13;&#10;END' />
      </column>
      <column caption='from_saudi' datatype='string' name='[Calculation_951385449774084096]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if [Origin] == &apos;Saudi&apos; OR [Origin] == &apos;Gulf Arabic&apos; then &apos;From Saudi&apos;&#13;&#10;ELSE &apos;Not from Saudi&apos;&#13;&#10;END' />
      </column>
      <column caption='Engine Size' datatype='real' name='[Engine_Size]' role='measure' type='quantitative' />
      <column caption='Gear Type' datatype='string' name='[Gear_Type]' role='dimension' semantic-role='' type='nominal' />
      <column datatype='string' name='[Make]' role='dimension' semantic-role='' type='nominal' />
      <column datatype='integer' name='[Mileage]' role='measure' type='quantitative' />
      <column datatype='string' name='[Options]' role='dimension' type='nominal' />
      <column datatype='string' name='[Origin]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;Gulf Arabic&quot;' value='&quot;United Arab Emirates&quot;' />
          <semantic-value key='&quot;Saudi&quot;' value='&quot;Saudi Arabia&quot;' />
        </semantic-values>
      </column>
      <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
      <column datatype='string' name='[Region]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <semantic-values semantic-role='[State].[Name]'>
          <semantic-value key='&quot;Abha&quot;' value='&quot;Aseer&quot;' />
          <semantic-value key='&quot;Al-Ahsa&quot;' value='&quot;Eastern Region&quot;' />
          <semantic-value key='&quot;Al-Medina&quot;' value='&quot;Al Madinah&quot;' />
          <semantic-value key='&quot;Al-Namas&quot;' value='&quot;Najran&quot;' />
          <semantic-value key='&quot;Arar&quot;' value='&quot;Al Hudud ash Shamaliyah&quot;' />
          <semantic-value key='&quot;Besha&quot;' value='&quot;Aseer&quot;' />
          <semantic-value key='&quot;Dammam&quot;' value='&quot;Eastern Region&quot;' />
          <semantic-value key='&quot;Hafar Al-Batin&quot;' value='&quot;Eastern Region&quot;' />
          <semantic-value key='&quot;Jeddah&quot;' value='&quot;Makkah Al-Mokarramah&quot;' />
          <semantic-value key='&quot;Jubail&quot;' value='&quot;Eastern Region&quot;' />
          <semantic-value key='&quot;Khobar&quot;' value='&quot;Eastern Region&quot;' />
          <semantic-value key='&quot;Qassim&quot;' value='&quot;Al-Qaseem&quot;' />
          <semantic-value key='&quot;Qurayyat&quot;' value='&quot;Al-Jouf&quot;' />
          <semantic-value key='&quot;Riyadh&quot;' value='&quot;Al-Riyadh&quot;' />
          <semantic-value key='&quot;Sabya&quot;' value='&quot;Jazan&quot;' />
          <semantic-value key='&quot;Sakaka&quot;' value='&quot;Al-Jouf&quot;' />
          <semantic-value key='&quot;Taef&quot;' value='&quot;Makkah Al-Mokarramah&quot;' />
          <semantic-value key='&quot;Wadi Dawasir&quot;' value='&quot;Al-Riyadh&quot;' />
          <semantic-value key='&quot;Yanbu&quot;' value='&quot;Al Madinah&quot;' />
        </semantic-values>
      </column>
      <column datatype='string' name='[Type]' role='dimension' type='nominal' />
      <column aggregation='None' caption='Year (bin)' datatype='integer' name='[Year (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[Year]' peg='0' size-parameter='[Parameters].[Parameter 1]' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column caption='df_copy_saudi_arabia_used_cars.csv' datatype='table' name='[__tableau_internal_object_id__].[df_copy_saudi_arabia_used_cars.csv_1BC17371FBEE446B87B9B5FCD6E7F66A]' role='measure' type='quantitative' />
      <column-instance column='[Type]' derivation='Attribute' name='[attr:Type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Mileage]' derivation='Avg' name='[avg:Mileage:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Price]' derivation='Avg' name='[avg:Price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Make]' derivation='Count' name='[cnt:Make:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Price]' derivation='Count' name='[cnt:Price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Type]' derivation='Count' name='[cnt:Type:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Make]' derivation='CountD' name='[ctd:Make:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Price]' derivation='CountD' name='[ctd:Price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Type]' derivation='CountD' name='[ctd:Type:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Price]' derivation='Avg' name='[cum:avg:Price:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[Price]' derivation='Median' name='[cum:med:Price:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[Price]' derivation='Sum' name='[cum:sum:Price:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[Price]' derivation='Avg' name='[diff:avg:Price:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Price]' derivation='CountD' name='[diff:ctd:Price:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Price]' derivation='Median' name='[diff:med:Price:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Price]' derivation='Sum' name='[diff:sum:Price:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Price]' derivation='Median' name='[med:Price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Gear_Type]' derivation='None' name='[none:Gear_Type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
      <column-instance column='[Options]' derivation='None' name='[none:Options:nk]' pivot='key' type='nominal' />
      <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Price]' derivation='Avg' name='[pcdf:avg:Price:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Price]' derivation='CountD' name='[pcdf:ctd:Price:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Price]' derivation='Median' name='[pcdf:med:Price:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Price]' derivation='Sum' name='[pcdf:sum:Price:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Price]' derivation='Avg' name='[pcto:avg:Price:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Price]' derivation='CountD' name='[pcto:ctd:Price:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Price]' derivation='Sum' name='[pcto:sum:Price:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Price]' derivation='Avg' name='[rank:avg:Price:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Engine_Size]' derivation='Sum' name='[sum:Engine_Size:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Mileage]' derivation='Sum' name='[sum:Mileage:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Price]' derivation='Sum' name='[sum:Price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Price]' derivation='Median' name='[win:med:Price:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <group caption='Action (Categories)' hidden='true' name='[Action (Categories)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_214202486571724801]' />
        </groupfilter>
      </group>
      <group caption='Action (Categories,Make)' hidden='true' name='[Action (Categories,Make)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_214202486571724801]' />
          <groupfilter function='level-members' level='[Make]' />
        </groupfilter>
      </group>
      <group caption='Action (Gear Type,Options)' hidden='true' name='[Action (Gear Type,Options)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Gear_Type]' />
          <groupfilter function='level-members' level='[Options]' />
        </groupfilter>
      </group>
      <group caption='Action (Make,Region)' hidden='true' name='[Action (Make,Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Make]' />
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <group caption='Action (Year (bin))' hidden='true' name='[Action (Year (bin))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Year (bin)]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Region, Origin'>
          <field>[Region]</field>
          <field>[Origin]</field>
        </drill-path>
      </drill-paths>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/ADIT/AppData/Local/Temp/TableauTemp/#TableauTemp_1f6ug8u0wr15e41clkmd70fo5549.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='12/25/2024 03:29:19 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Type</remote-alias>
              <ordinal>0</ordinal>
              <family>df_copy_saudi_arabia_used_cars.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>260</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[df_copy_saudi_arabia_used_cars.csv_1BC17371FBEE446B87B9B5FCD6E7F66A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>1</ordinal>
              <family>df_copy_saudi_arabia_used_cars.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>28</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[df_copy_saudi_arabia_used_cars.csv_1BC17371FBEE446B87B9B5FCD6E7F66A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Make</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Make]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Make</remote-alias>
              <ordinal>2</ordinal>
              <family>df_copy_saudi_arabia_used_cars.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>48</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[df_copy_saudi_arabia_used_cars.csv_1BC17371FBEE446B87B9B5FCD6E7F66A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Gear_Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Gear_Type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Gear_Type</remote-alias>
              <ordinal>3</ordinal>
              <family>df_copy_saudi_arabia_used_cars.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[df_copy_saudi_arabia_used_cars.csv_1BC17371FBEE446B87B9B5FCD6E7F66A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Origin</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Origin]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Origin</remote-alias>
              <ordinal>4</ordinal>
              <family>df_copy_saudi_arabia_used_cars.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[df_copy_saudi_arabia_used_cars.csv_1BC17371FBEE446B87B9B5FCD6E7F66A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Options</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Options]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Options</remote-alias>
              <ordinal>5</ordinal>
              <family>df_copy_saudi_arabia_used_cars.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[df_copy_saudi_arabia_used_cars.csv_1BC17371FBEE446B87B9B5FCD6E7F66A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>6</ordinal>
              <family>df_copy_saudi_arabia_used_cars.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>38</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_copy_saudi_arabia_used_cars.csv_1BC17371FBEE446B87B9B5FCD6E7F66A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Engine_Size</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Engine_Size]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Engine_Size</remote-alias>
              <ordinal>7</ordinal>
              <family>df_copy_saudi_arabia_used_cars.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>52</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_copy_saudi_arabia_used_cars.csv_1BC17371FBEE446B87B9B5FCD6E7F66A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Mileage</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Mileage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Mileage</remote-alias>
              <ordinal>8</ordinal>
              <family>df_copy_saudi_arabia_used_cars.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>873</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_copy_saudi_arabia_used_cars.csv_1BC17371FBEE446B87B9B5FCD6E7F66A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Price</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Price]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Price</remote-alias>
              <ordinal>9</ordinal>
              <family>df_copy_saudi_arabia_used_cars.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>337</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_copy_saudi_arabia_used_cars.csv_1BC17371FBEE446B87B9B5FCD6E7F66A]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ghroqu0hu96w1176gath0i824jp].[attr:Type:nk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ghroqu0hu96w1176gath0i824jp].[cnt:Make:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ghroqu0hu96w1176gath0i824jp].[cnt:Type:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ghroqu0hu96w1176gath0i824jp].[ctd:Make:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ghroqu0hu96w1176gath0i824jp].[ctd:Type:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ghroqu0hu96w1176gath0i824jp].[none:Make:nk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ghroqu0hu96w1176gath0i824jp].[none:Type:nk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ghroqu0hu96w1176gath0i824jp].[sum:Engine_Size:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0ghroqu0hu96w1176gath0i824jp]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ghroqu0hu96w1176gath0i824jp].[avg:Price:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ghroqu0hu96w1176gath0i824jp].[cnt:Price:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ghroqu0hu96w1176gath0i824jp].[ctd:Price:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ghroqu0hu96w1176gath0i824jp].[cum:avg:Price:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ghroqu0hu96w1176gath0i824jp].[cum:med:Price:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ghroqu0hu96w1176gath0i824jp].[cum:sum:Price:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ghroqu0hu96w1176gath0i824jp].[diff:avg:Price:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ghroqu0hu96w1176gath0i824jp].[diff:ctd:Price:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ghroqu0hu96w1176gath0i824jp].[diff:med:Price:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ghroqu0hu96w1176gath0i824jp].[diff:sum:Price:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ghroqu0hu96w1176gath0i824jp].[med:Price:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ghroqu0hu96w1176gath0i824jp].[pcdf:avg:Price:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ghroqu0hu96w1176gath0i824jp].[pcdf:ctd:Price:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ghroqu0hu96w1176gath0i824jp].[pcdf:med:Price:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ghroqu0hu96w1176gath0i824jp].[pcdf:sum:Price:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ghroqu0hu96w1176gath0i824jp].[pcto:avg:Price:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ghroqu0hu96w1176gath0i824jp].[pcto:ctd:Price:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ghroqu0hu96w1176gath0i824jp].[pcto:sum:Price:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ghroqu0hu96w1176gath0i824jp].[rank:avg:Price:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ghroqu0hu96w1176gath0i824jp].[sum:Price:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ghroqu0hu96w1176gath0i824jp].[usr:Calculation1:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ghroqu0hu96w1176gath0i824jp].[win:med:Price:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ghroqu0hu96w1176gath0i824jp].[avg:Mileage:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ghroqu0hu96w1176gath0i824jp].[sum:Mileage:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Options:nk]' palette='blue_red_brown_10_0' type='palette'>
            <map to='#466f9d'>
              <bucket>&quot;Full&quot;</bucket>
            </map>
            <map to='#91b3d7'>
              <bucket>&quot;Semi Full&quot;</bucket>
            </map>
            <map to='#ed444a'>
              <bucket>&quot;Standard&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Gear_Type:nk]' palette='blue_red_brown_10_0' type='palette'>
            <map to='#466f9d'>
              <bucket>&quot;Automatic&quot;</bucket>
            </map>
            <map to='#fd6f30'>
              <bucket>&quot;Manual&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Make:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Chevrolet&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Iveco&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Škoda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aston Martin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;GMC&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MG&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BYD&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hummer&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Peugeot&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;FAW&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Land Rover&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Volkswagen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chrysler&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jaguar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Suzuki&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cadillac&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hyundai&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Porsche&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Geely&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mercedes&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Audi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Great Wall&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MINI&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Foton&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Maserati&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Changan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;INFINITI&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Renault&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ferrari&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lexus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zhengzhou&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fiat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lifan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;GAC&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mazda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Genesis&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mercury&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Daihatsu&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jeep&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Toyota&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chery&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Isuzu&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rolls-Royce&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bentley&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;HAVAL&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mitsubishi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ford&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lincoln&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dodge&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Victory Auto&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BMW&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Honda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nissan&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[City].[Name]' value='%null%' />
        <semantic-value key='[Country].[Name]' value='&quot;Saudi Arabia&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Bins' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
          <calculation class='tableau' formula='10' />
          <range max='10' min='1' />
        </column>
        <column alias='Price' caption='Settings Parameter' datatype='real' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='1.'>
          <calculation class='tableau' formula='1.' />
          <aliases>
            <alias key='1.' value='Price' />
            <alias key='2.' value='Mileage' />
            <alias key='3.' value='Engine Size' />
          </aliases>
        </column>
        <column alias='Make' caption='Setting Categories' datatype='real' name='[Parameter 3]' param-domain-type='list' role='measure' type='quantitative' value='1.'>
          <calculation class='tableau' formula='1.' />
          <aliases>
            <alias key='1.' value='Make' />
            <alias key='2.' value='Type' />
          </aliases>
        </column>
      </datasource-dependencies>
      <object-graph>
        <objects>
          <object caption='df_copy_saudi_arabia_used_cars.csv' id='df_copy_saudi_arabia_used_cars.csv_1BC17371FBEE446B87B9B5FCD6E7F66A'>
            <properties context=''>
              <relation connection='textscan.1hiurd90tbqfew16xoket0hve89v' name='df_copy_saudi_arabia_used_cars.csv' table='[df_copy_saudi_arabia_used_cars#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_ID' separator=','>
                  <column datatype='string' name='Type' ordinal='0' />
                  <column datatype='string' name='Region' ordinal='1' />
                  <column datatype='string' name='Make' ordinal='2' />
                  <column datatype='string' name='Gear_Type' ordinal='3' />
                  <column datatype='string' name='Origin' ordinal='4' />
                  <column datatype='string' name='Options' ordinal='5' />
                  <column datatype='integer' name='Year' ordinal='6' />
                  <column datatype='real' name='Engine_Size' ordinal='7' />
                  <column datatype='integer' name='Mileage' ordinal='8' />
                  <column datatype='integer' name='Price' ordinal='9' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.0ghroqu0hu96w1176gath0i824jp'>
      <datasources>
        <datasource caption='df_copy_saudi_arabia_used_cars' name='federated.0ghroqu0hu96w1176gath0i824jp' />
      </datasources>
      <datasource-dependencies datasource='federated.0ghroqu0hu96w1176gath0i824jp'>
        <column datatype='string' name='[Make]' role='dimension' semantic-role='' type='nominal' />
        <column datatype='string' name='[Type]' role='dimension' type='nominal' />
        <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
        <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0ghroqu0hu96w1176gath0i824jp].[none:Make:nk]'>
        <groupfilter function='level-members' level='[none:Make:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.0ghroqu0hu96w1176gath0i824jp].[none:Make:nk]' />
      </filter>
      <filter class='categorical' column='[federated.0ghroqu0hu96w1176gath0i824jp].[none:Type:nk]'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;2&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;3&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;300&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;3008&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;301&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;360&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;4Runner&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;5&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;500&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;5008&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;6&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;911&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;A&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;A3&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;A4&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;A5&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;A6&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;A7&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;A8&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Abeka&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Acadia&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Accent&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Accord&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Altima&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;APV&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Armada&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;ASX&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;ATS&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Attrage&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Aurion&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Avalon&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Avante&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Avanza&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Aveo&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Azera&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Azkarra&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;B50&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Beetle&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Bentayga&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Blazer&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Bus County&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Bus Urvan&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;C&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;C200&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;C300&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Cadenza&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Camargue&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Camaro&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Camry&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Caprice&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Carens&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Carenz&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Carnival&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Cayenne&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Cayenne S&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Cayenne Turbo&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Cayman&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;CC&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Cerato&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Challenger&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Charger&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Cherokee&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Ciocca&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;City&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Civic&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;CL&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;CLA&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;CLS&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Coaster&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Colorado&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Compass&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Coolray&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Copper&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Cores&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Corolla&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Countryman&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Coupe&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Coupe S&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Cressida&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Creta&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Cruze&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;CRV&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;CS35&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;CS35 Plus&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;CS75&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;CS85&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;CS95&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;CT-S&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;CT4&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;CT5&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;CT6&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;CX3&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;CX5&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;CX7&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;CX9&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;D-MAX&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Daily&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Datsun&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;DB9&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Defender&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Delta&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Discovery&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Doblo&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Dokker&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Durango&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Duster&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Dyna&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Dzire&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;E&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Eado&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;EC7&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;EC8&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Echo Sport&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Edge&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Elantra&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Emgrand&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Envoy&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Ertiga&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;ES&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Escalade&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Expedition&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Explorer&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;F Type&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;F-Pace&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;F150&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;F3&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;FJ&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Fleetwood&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Flex&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Fluence&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Flying Spur&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Focus&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Furniture&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Fusion&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;FX&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;G&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;G70&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;G80&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;GC7&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Genesis&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Ghost&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;GL&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;GLC&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;GLE&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Golf&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Gran Max&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Grand Cherokee&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Grand Marquis&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Grand Vitara&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;GS&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;GS3&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;GTB 599 Fiorano&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;GX&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;H1&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;H2&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;H3&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;H6&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Hiace&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Hilux&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;HRV&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;HS&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;i40&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Impala&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Innova&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;IS&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Jetta&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Jimny&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Juke&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;K5&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Kaptiva&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;KICKS&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Koleos&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Kona&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;L200&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;L300&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Lancer&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Land Cruiser&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Land Cruiser 70&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Land Cruiser Pickup&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Levante&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;LF X60&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Liberty&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Logan&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;LS&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;LX&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;M&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Macan&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Malibu&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Marquis&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Maxima&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Megane&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Milan&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Mini Van&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;MKS&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;MKX&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;MKZ&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;ML&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Mohave&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Montero&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Montero2&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Mustang&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Nativa&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Navara&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Navigator&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Nitro&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;NX&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Odyssey&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Opirus&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Optima&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Other&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Pajero&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Panamera&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Passat&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Pathfinder&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Patrol&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Pegas&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Picanto&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Pick up&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Pilot&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Platinum&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Power&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Prado&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Prestige&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Prestige Plus&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Previa&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Prius&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Q&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Q5&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Q7&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Quattroporte&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;QX&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Ram&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Range Rover&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Ranger&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Rav4&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;RC&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Rio&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Royal&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Rush&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;RX&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;RX5&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;RX8&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;S&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;S300&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;S5&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;S8&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Safari&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Safrane&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Savana&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Sedona&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;SEL&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Seltos&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Senta fe&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Sentra&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Seven&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Sierra&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Silverado&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;SL&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Sonata&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Sorento&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Soul&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Spark&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Sportage&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;SRT&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Stinger&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Suburban&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Sunny&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Superb&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Suvana&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Sylvian Bus&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Symbol&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Tahoe&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Taurus&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Terrain&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;The 3&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;The 4&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;The 5&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;The 6&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;The 7&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;The M&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Tiggo&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Tiguan&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Touareg&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Town Car&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Trailblazer&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Traverse&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Tucson&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Tuscani&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;UX&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Van&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Van R&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Vanquish&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Vego&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Veloster&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Viano&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Victoria&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Vitara&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;VTC&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Wrangler&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;X&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;X-Terra&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;X-Trail&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;X40&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;X7&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;XF&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;XJ&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;XT5&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Yaris&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Yukon&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Z&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Z350&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;Z370&quot;' />
          <groupfilter function='member' level='[none:Type:nk]' member='&quot;ZS&quot;' />
        </groupfilter>
        <target field='[federated.0ghroqu0hu96w1176gath0i824jp].[none:Type:nk]' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 4 (generated)' name='[Action4_6A14C30C9D464F8DB9E45C623C943EA6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Used Cars Available Dashboard' type='sheet' worksheet='Categories' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Used Cars Available Dashboard' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5_34514813EA3F4B84B386839DADBBC9A4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Used Cars Available Dashboard' type='sheet' worksheet='Production Year of Cars' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Used Cars Available Dashboard' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action6_BCBB18302CF74CD9973A06A1C7136458]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Used Cars Available Dashboard' type='sheet' worksheet='Options' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Used Cars Available Dashboard' />
      </command>
    </action>
    <action caption='Filter 7 (generated)' name='[Action7_64BBCA3746C54A7A9A69C59618E2D1BC]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Used Cars Available Dashboard' type='sheet' worksheet='Region' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Used Cars Available Dashboard' />
      </command>
    </action>
    <action caption='Filter 8 (generated)' name='[Action8_1B7ECBCDF0B640278ADA590E966FEEAE]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Used Cars Available Dashboard' type='sheet' worksheet='Cars Available' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Used Cars Available Dashboard' />
      </command>
    </action>
    <action caption='Filter 9 (generated)' name='[Action9_4AE31AFB9137498C9B9E1662083F4254]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Used Cars Available Dashboard' type='sheet' worksheet='Brands' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Used Cars Available Dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Avg. price of year'>
      <table>
        <view>
          <datasources>
            <datasource caption='df_copy_saudi_arabia_used_cars' name='federated.0ghroqu0hu96w1176gath0i824jp' />
          </datasources>
          <datasource-dependencies datasource='federated.0ghroqu0hu96w1176gath0i824jp'>
            <column datatype='string' name='[Make]' role='dimension' semantic-role='' type='nominal' />
            <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Price]' derivation='Avg' name='[avg:Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0ghroqu0hu96w1176gath0i824jp].[none:Make:nk]</column>
            <column>[federated.0ghroqu0hu96w1176gath0i824jp].[none:Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
        </panes>
        <rows>[federated.0ghroqu0hu96w1176gath0i824jp].[avg:Price:qk]</rows>
        <cols>[federated.0ghroqu0hu96w1176gath0i824jp].[none:Year:ok]</cols>
      </table>
      <simple-id uuid='{7DDCC9EC-CC21-4223-864A-310F0A732C60}' />
    </worksheet>
    <worksheet name='Brands'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_copy_saudi_arabia_used_cars' name='federated.0ghroqu0hu96w1176gath0i824jp' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Bins' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
              <range max='10' min='1' />
            </column>
            <column alias='Make' caption='Setting Categories' datatype='real' name='[Parameter 3]' param-domain-type='list' role='measure' type='quantitative' value='1.'>
              <calculation class='tableau' formula='1.' />
              <aliases>
                <alias key='1.' value='Make' />
                <alias key='2.' value='Type' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0ghroqu0hu96w1176gath0i824jp'>
            <column caption='Categories' datatype='string' name='[Calculation_214202486571724801]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 3]&#13;&#10;when 1 then [Make]&#13;&#10;WHEN 2 then [Type]&#13;&#10;END' />
            </column>
            <column caption='Gear Type' datatype='string' name='[Gear_Type]' role='dimension' semantic-role='' type='nominal' />
            <column datatype='string' name='[Make]' role='dimension' semantic-role='' type='nominal' />
            <column datatype='string' name='[Options]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Abha&quot;' value='&quot;Aseer&quot;' />
                <semantic-value key='&quot;Al-Ahsa&quot;' value='&quot;Eastern Region&quot;' />
                <semantic-value key='&quot;Al-Medina&quot;' value='&quot;Al Madinah&quot;' />
                <semantic-value key='&quot;Al-Namas&quot;' value='&quot;Najran&quot;' />
                <semantic-value key='&quot;Arar&quot;' value='&quot;Al Hudud ash Shamaliyah&quot;' />
                <semantic-value key='&quot;Besha&quot;' value='&quot;Aseer&quot;' />
                <semantic-value key='&quot;Dammam&quot;' value='&quot;Eastern Region&quot;' />
                <semantic-value key='&quot;Hafar Al-Batin&quot;' value='&quot;Eastern Region&quot;' />
                <semantic-value key='&quot;Jeddah&quot;' value='&quot;Makkah Al-Mokarramah&quot;' />
                <semantic-value key='&quot;Jubail&quot;' value='&quot;Eastern Region&quot;' />
                <semantic-value key='&quot;Khobar&quot;' value='&quot;Eastern Region&quot;' />
                <semantic-value key='&quot;Qassim&quot;' value='&quot;Al-Qaseem&quot;' />
                <semantic-value key='&quot;Qurayyat&quot;' value='&quot;Al-Jouf&quot;' />
                <semantic-value key='&quot;Riyadh&quot;' value='&quot;Al-Riyadh&quot;' />
                <semantic-value key='&quot;Sabya&quot;' value='&quot;Jazan&quot;' />
                <semantic-value key='&quot;Sakaka&quot;' value='&quot;Al-Jouf&quot;' />
                <semantic-value key='&quot;Taef&quot;' value='&quot;Makkah Al-Mokarramah&quot;' />
                <semantic-value key='&quot;Wadi Dawasir&quot;' value='&quot;Al-Riyadh&quot;' />
                <semantic-value key='&quot;Yanbu&quot;' value='&quot;Al Madinah&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column aggregation='None' caption='Year (bin)' datatype='integer' name='[Year (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Year]' peg='0' size-parameter='[Parameters].[Parameter 1]' />
            </column>
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Make]' derivation='CountD' name='[ctd:Make:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ghroqu0hu96w1176gath0i824jp].[Action (Categories)]'>
            <groupfilter function='level-members' level='[Calculation_214202486571724801]' user:ui-action-filter='[Action1_ACE83070559343B6A314100E5305153D]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0ghroqu0hu96w1176gath0i824jp].[Action (Categories,Make)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_6A14C30C9D464F8DB9E45C623C943EA6]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_214202486571724801]' />
              <groupfilter function='level-members' level='[Make]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ghroqu0hu96w1176gath0i824jp].[Action (Gear Type,Options)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_3453D25FCDCF4953A50B500FE0396F37]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Gear_Type]' />
              <groupfilter function='level-members' level='[Options]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ghroqu0hu96w1176gath0i824jp].[Action (Make,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action7_64BBCA3746C54A7A9A69C59618E2D1BC]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Make]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ghroqu0hu96w1176gath0i824jp].[Action (Year (bin))]'>
            <groupfilter function='level-members' level='[Year (bin)]' user:ui-action-filter='[Action2_B320BD1E281A4DE98F9741E0EF7562DD]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ghroqu0hu96w1176gath0i824jp].[none:Make:nk]</column>
            <column>[federated.0ghroqu0hu96w1176gath0i824jp].[none:Type:nk]</column>
            <column>[federated.0ghroqu0hu96w1176gath0i824jp].[Action (Year (bin))]</column>
            <column>[federated.0ghroqu0hu96w1176gath0i824jp].[Action (Categories)]</column>
            <column>[federated.0ghroqu0hu96w1176gath0i824jp].[Action (Gear Type,Options)]</column>
            <column>[federated.0ghroqu0hu96w1176gath0i824jp].[Action (Categories,Make)]</column>
            <column>[federated.0ghroqu0hu96w1176gath0i824jp].[Action (Make,Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='center' />
            <format attr='color' value='#000000' />
            <format attr='height' value='66' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
            <format attr='font-size' value='15' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#4602ab' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0ghroqu0hu96w1176gath0i824jp].[ctd:Make:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{6B33C930-3A44-4B28-8225-9CE0DF2519EC}' />
    </worksheet>
    <worksheet name='Cars Available'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_copy_saudi_arabia_used_cars' name='federated.0ghroqu0hu96w1176gath0i824jp' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Bins' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
              <range max='10' min='1' />
            </column>
            <column alias='Make' caption='Setting Categories' datatype='real' name='[Parameter 3]' param-domain-type='list' role='measure' type='quantitative' value='1.'>
              <calculation class='tableau' formula='1.' />
              <aliases>
                <alias key='1.' value='Make' />
                <alias key='2.' value='Type' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0ghroqu0hu96w1176gath0i824jp'>
            <column caption='Categories' datatype='string' name='[Calculation_214202486571724801]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 3]&#13;&#10;when 1 then [Make]&#13;&#10;WHEN 2 then [Type]&#13;&#10;END' />
            </column>
            <column caption='from_saudi' datatype='string' name='[Calculation_951385449774084096]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [Origin] == &apos;Saudi&apos; OR [Origin] == &apos;Gulf Arabic&apos; then &apos;From Saudi&apos;&#13;&#10;ELSE &apos;Not from Saudi&apos;&#13;&#10;END' />
            </column>
            <column caption='Gear Type' datatype='string' name='[Gear_Type]' role='dimension' semantic-role='' type='nominal' />
            <column datatype='string' name='[Make]' role='dimension' semantic-role='' type='nominal' />
            <column datatype='string' name='[Options]' role='dimension' type='nominal' />
            <column datatype='string' name='[Origin]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Gulf Arabic&quot;' value='&quot;United Arab Emirates&quot;' />
                <semantic-value key='&quot;Saudi&quot;' value='&quot;Saudi Arabia&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Region]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Abha&quot;' value='&quot;Aseer&quot;' />
                <semantic-value key='&quot;Al-Ahsa&quot;' value='&quot;Eastern Region&quot;' />
                <semantic-value key='&quot;Al-Medina&quot;' value='&quot;Al Madinah&quot;' />
                <semantic-value key='&quot;Al-Namas&quot;' value='&quot;Najran&quot;' />
                <semantic-value key='&quot;Arar&quot;' value='&quot;Al Hudud ash Shamaliyah&quot;' />
                <semantic-value key='&quot;Besha&quot;' value='&quot;Aseer&quot;' />
                <semantic-value key='&quot;Dammam&quot;' value='&quot;Eastern Region&quot;' />
                <semantic-value key='&quot;Hafar Al-Batin&quot;' value='&quot;Eastern Region&quot;' />
                <semantic-value key='&quot;Jeddah&quot;' value='&quot;Makkah Al-Mokarramah&quot;' />
                <semantic-value key='&quot;Jubail&quot;' value='&quot;Eastern Region&quot;' />
                <semantic-value key='&quot;Khobar&quot;' value='&quot;Eastern Region&quot;' />
                <semantic-value key='&quot;Qassim&quot;' value='&quot;Al-Qaseem&quot;' />
                <semantic-value key='&quot;Qurayyat&quot;' value='&quot;Al-Jouf&quot;' />
                <semantic-value key='&quot;Riyadh&quot;' value='&quot;Al-Riyadh&quot;' />
                <semantic-value key='&quot;Sabya&quot;' value='&quot;Jazan&quot;' />
                <semantic-value key='&quot;Sakaka&quot;' value='&quot;Al-Jouf&quot;' />
                <semantic-value key='&quot;Taef&quot;' value='&quot;Makkah Al-Mokarramah&quot;' />
                <semantic-value key='&quot;Wadi Dawasir&quot;' value='&quot;Al-Riyadh&quot;' />
                <semantic-value key='&quot;Yanbu&quot;' value='&quot;Al Madinah&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column aggregation='None' caption='Year (bin)' datatype='integer' name='[Year (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Year]' peg='0' size-parameter='[Parameters].[Parameter 1]' />
            </column>
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_951385449774084096]' derivation='Count' name='[cnt:Calculation_951385449774084096:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ghroqu0hu96w1176gath0i824jp].[Action (Categories)]'>
            <groupfilter function='level-members' level='[Calculation_214202486571724801]' user:ui-action-filter='[Action1_ACE83070559343B6A314100E5305153D]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0ghroqu0hu96w1176gath0i824jp].[Action (Categories,Make)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_6A14C30C9D464F8DB9E45C623C943EA6]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_214202486571724801]' />
              <groupfilter function='level-members' level='[Make]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ghroqu0hu96w1176gath0i824jp].[Action (Gear Type,Options)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_3453D25FCDCF4953A50B500FE0396F37]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Gear_Type]' />
              <groupfilter function='level-members' level='[Options]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ghroqu0hu96w1176gath0i824jp].[Action (Make,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action7_64BBCA3746C54A7A9A69C59618E2D1BC]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Make]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ghroqu0hu96w1176gath0i824jp].[Action (Year (bin))]'>
            <groupfilter function='level-members' level='[Year (bin)]' user:ui-action-filter='[Action2_B320BD1E281A4DE98F9741E0EF7562DD]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ghroqu0hu96w1176gath0i824jp].[none:Make:nk]</column>
            <column>[federated.0ghroqu0hu96w1176gath0i824jp].[none:Type:nk]</column>
            <column>[federated.0ghroqu0hu96w1176gath0i824jp].[Action (Year (bin))]</column>
            <column>[federated.0ghroqu0hu96w1176gath0i824jp].[Action (Categories)]</column>
            <column>[federated.0ghroqu0hu96w1176gath0i824jp].[Action (Gear Type,Options)]</column>
            <column>[federated.0ghroqu0hu96w1176gath0i824jp].[Action (Categories,Make)]</column>
            <column>[federated.0ghroqu0hu96w1176gath0i824jp].[Action (Make,Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='center' />
            <format attr='font-weight' value='bold' />
            <format attr='font-size' value='15' />
            <format attr='height' value='62' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#4602ab' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0ghroqu0hu96w1176gath0i824jp].[cnt:Calculation_951385449774084096:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{78C16F2C-1DB2-4988-9B0B-A38BB999BD14}' />
    </worksheet>
    <worksheet name='Cars from saudi or not'>
      <table>
        <view>
          <datasources>
            <datasource caption='df_copy_saudi_arabia_used_cars' name='federated.0ghroqu0hu96w1176gath0i824jp' />
          </datasources>
          <datasource-dependencies datasource='federated.0ghroqu0hu96w1176gath0i824jp'>
            <column caption='from_saudi' datatype='string' name='[Calculation_951385449774084096]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [Origin] == &apos;Saudi&apos; OR [Origin] == &apos;Gulf Arabic&apos; then &apos;From Saudi&apos;&#13;&#10;ELSE &apos;Not from Saudi&apos;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Make]' role='dimension' semantic-role='' type='nominal' />
            <column datatype='string' name='[Origin]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Gulf Arabic&quot;' value='&quot;United Arab Emirates&quot;' />
                <semantic-value key='&quot;Saudi&quot;' value='&quot;Saudi Arabia&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Make]' derivation='Count' name='[cnt:Make:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Type]' derivation='Count' name='[cnt:Type:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_951385449774084096]' derivation='None' name='[none:Calculation_951385449774084096:nk]' pivot='key' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ghroqu0hu96w1176gath0i824jp].[none:Calculation_951385449774084096:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_951385449774084096:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ghroqu0hu96w1176gath0i824jp].[none:Make:nk]</column>
            <column>[federated.0ghroqu0hu96w1176gath0i824jp].[none:Calculation_951385449774084096:nk]</column>
            <column>[federated.0ghroqu0hu96w1176gath0i824jp].[none:Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ghroqu0hu96w1176gath0i824jp].[none:Make:nk]' />
              <size column='[federated.0ghroqu0hu96w1176gath0i824jp].[cnt:Type:ok]' />
              <text column='[federated.0ghroqu0hu96w1176gath0i824jp].[none:Make:nk]' />
              <text column='[federated.0ghroqu0hu96w1176gath0i824jp].[none:Calculation_951385449774084096:nk]' />
              <text column='[federated.0ghroqu0hu96w1176gath0i824jp].[cnt:Make:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{AE210D41-9D5F-4F81-A93B-816DAAD6EF56}' />
    </worksheet>
    <worksheet name='Categories'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_copy_saudi_arabia_used_cars' name='federated.0ghroqu0hu96w1176gath0i824jp' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Bins' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
              <range max='10' min='1' />
            </column>
            <column alias='Price' caption='Settings Parameter' datatype='real' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='1.'>
              <calculation class='tableau' formula='1.' />
              <aliases>
                <alias key='1.' value='Price' />
                <alias key='2.' value='Mileage' />
                <alias key='3.' value='Engine Size' />
              </aliases>
            </column>
            <column alias='Make' caption='Setting Categories' datatype='real' name='[Parameter 3]' param-domain-type='list' role='measure' type='quantitative' value='1.'>
              <calculation class='tableau' formula='1.' />
              <aliases>
                <alias key='1.' value='Make' />
                <alias key='2.' value='Type' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0ghroqu0hu96w1176gath0i824jp'>
            <column caption='p. Price / Mileage/ Engine Size' datatype='real' name='[Calculation_214202486568828928]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case [Parameters].[Parameter 2]&#13;&#10;when 1 then [Price]&#13;&#10;when 2 then [Mileage]&#13;&#10;when 3 then [Engine_Size]&#13;&#10;END' />
            </column>
            <column caption='Categories' datatype='string' name='[Calculation_214202486571724801]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 3]&#13;&#10;when 1 then [Make]&#13;&#10;WHEN 2 then [Type]&#13;&#10;END' />
            </column>
            <column caption='Engine Size' datatype='real' name='[Engine_Size]' role='measure' type='quantitative' />
            <column caption='Gear Type' datatype='string' name='[Gear_Type]' role='dimension' semantic-role='' type='nominal' />
            <column datatype='string' name='[Make]' role='dimension' semantic-role='' type='nominal' />
            <column datatype='integer' name='[Mileage]' role='measure' type='quantitative' />
            <column datatype='string' name='[Options]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Abha&quot;' value='&quot;Aseer&quot;' />
                <semantic-value key='&quot;Al-Ahsa&quot;' value='&quot;Eastern Region&quot;' />
                <semantic-value key='&quot;Al-Medina&quot;' value='&quot;Al Madinah&quot;' />
                <semantic-value key='&quot;Al-Namas&quot;' value='&quot;Najran&quot;' />
                <semantic-value key='&quot;Arar&quot;' value='&quot;Al Hudud ash Shamaliyah&quot;' />
                <semantic-value key='&quot;Besha&quot;' value='&quot;Aseer&quot;' />
                <semantic-value key='&quot;Dammam&quot;' value='&quot;Eastern Region&quot;' />
                <semantic-value key='&quot;Hafar Al-Batin&quot;' value='&quot;Eastern Region&quot;' />
                <semantic-value key='&quot;Jeddah&quot;' value='&quot;Makkah Al-Mokarramah&quot;' />
                <semantic-value key='&quot;Jubail&quot;' value='&quot;Eastern Region&quot;' />
                <semantic-value key='&quot;Khobar&quot;' value='&quot;Eastern Region&quot;' />
                <semantic-value key='&quot;Qassim&quot;' value='&quot;Al-Qaseem&quot;' />
                <semantic-value key='&quot;Qurayyat&quot;' value='&quot;Al-Jouf&quot;' />
                <semantic-value key='&quot;Riyadh&quot;' value='&quot;Al-Riyadh&quot;' />
                <semantic-value key='&quot;Sabya&quot;' value='&quot;Jazan&quot;' />
                <semantic-value key='&quot;Sakaka&quot;' value='&quot;Al-Jouf&quot;' />
                <semantic-value key='&quot;Taef&quot;' value='&quot;Makkah Al-Mokarramah&quot;' />
                <semantic-value key='&quot;Wadi Dawasir&quot;' value='&quot;Al-Riyadh&quot;' />
                <semantic-value key='&quot;Yanbu&quot;' value='&quot;Al Madinah&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column aggregation='None' caption='Year (bin)' datatype='integer' name='[Year (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Year]' peg='0' size-parameter='[Parameters].[Parameter 1]' />
            </column>
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_214202486568828928]' derivation='Avg' name='[avg:Calculation_214202486568828928:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_214202486571724801]' derivation='None' name='[none:Calculation_214202486571724801:nk]' pivot='key' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ghroqu0hu96w1176gath0i824jp].[Action (Gear Type,Options)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_3453D25FCDCF4953A50B500FE0396F37]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Gear_Type]' />
              <groupfilter function='level-members' level='[Options]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ghroqu0hu96w1176gath0i824jp].[Action (Make,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action7_64BBCA3746C54A7A9A69C59618E2D1BC]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Make]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ghroqu0hu96w1176gath0i824jp].[Action (Year (bin))]'>
            <groupfilter function='level-members' level='[Year (bin)]' user:ui-action-filter='[Action2_B320BD1E281A4DE98F9741E0EF7562DD]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ghroqu0hu96w1176gath0i824jp].[none:Make:nk]</column>
            <column>[federated.0ghroqu0hu96w1176gath0i824jp].[none:Type:nk]</column>
            <column>[federated.0ghroqu0hu96w1176gath0i824jp].[Action (Year (bin))]</column>
            <column>[federated.0ghroqu0hu96w1176gath0i824jp].[Action (Gear Type,Options)]</column>
            <column>[federated.0ghroqu0hu96w1176gath0i824jp].[Action (Make,Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0ghroqu0hu96w1176gath0i824jp].[avg:Calculation_214202486568828928:qk]' scope='cols' value='Price' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='18' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ghroqu0hu96w1176gath0i824jp].[none:Make:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>&lt;[Parameters].[Parameter 3]&gt;:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0ghroqu0hu96w1176gath0i824jp].[none:Calculation_214202486571724801:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>&lt;[Parameters].[Parameter 2]&gt;:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0ghroqu0hu96w1176gath0i824jp].[avg:Calculation_214202486568828928:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4602ab' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ghroqu0hu96w1176gath0i824jp].[none:Calculation_214202486571724801:nk]</rows>
        <cols>[federated.0ghroqu0hu96w1176gath0i824jp].[avg:Calculation_214202486568828928:qk]</cols>
      </table>
      <simple-id uuid='{B81DCB29-8210-4C34-8027-8AD42F575499}' />
    </worksheet>
    <worksheet name='Options'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_copy_saudi_arabia_used_cars' name='federated.0ghroqu0hu96w1176gath0i824jp' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Bins' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
              <range max='10' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0ghroqu0hu96w1176gath0i824jp'>
            <column caption='SUM (0)' datatype='integer' name='[Calculation_145804067119104001]' role='measure' type='quantitative' user:unnamed='Sheet 14'>
              <calculation class='tableau' formula='SUM (0)' />
            </column>
            <column caption='SUM (0)' datatype='integer' name='[Calculation_145804067119194115]' role='measure' type='quantitative' user:unnamed='Sheet 14'>
              <calculation class='tableau' formula='SUM (0)' />
            </column>
            <column caption='Gear Type' datatype='string' name='[Gear_Type]' role='dimension' semantic-role='' type='nominal' />
            <column datatype='string' name='[Make]' role='dimension' semantic-role='' type='nominal' />
            <column datatype='string' name='[Options]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Abha&quot;' value='&quot;Aseer&quot;' />
                <semantic-value key='&quot;Al-Ahsa&quot;' value='&quot;Eastern Region&quot;' />
                <semantic-value key='&quot;Al-Medina&quot;' value='&quot;Al Madinah&quot;' />
                <semantic-value key='&quot;Al-Namas&quot;' value='&quot;Najran&quot;' />
                <semantic-value key='&quot;Arar&quot;' value='&quot;Al Hudud ash Shamaliyah&quot;' />
                <semantic-value key='&quot;Besha&quot;' value='&quot;Aseer&quot;' />
                <semantic-value key='&quot;Dammam&quot;' value='&quot;Eastern Region&quot;' />
                <semantic-value key='&quot;Hafar Al-Batin&quot;' value='&quot;Eastern Region&quot;' />
                <semantic-value key='&quot;Jeddah&quot;' value='&quot;Makkah Al-Mokarramah&quot;' />
                <semantic-value key='&quot;Jubail&quot;' value='&quot;Eastern Region&quot;' />
                <semantic-value key='&quot;Khobar&quot;' value='&quot;Eastern Region&quot;' />
                <semantic-value key='&quot;Qassim&quot;' value='&quot;Al-Qaseem&quot;' />
                <semantic-value key='&quot;Qurayyat&quot;' value='&quot;Al-Jouf&quot;' />
                <semantic-value key='&quot;Riyadh&quot;' value='&quot;Al-Riyadh&quot;' />
                <semantic-value key='&quot;Sabya&quot;' value='&quot;Jazan&quot;' />
                <semantic-value key='&quot;Sakaka&quot;' value='&quot;Al-Jouf&quot;' />
                <semantic-value key='&quot;Taef&quot;' value='&quot;Makkah Al-Mokarramah&quot;' />
                <semantic-value key='&quot;Wadi Dawasir&quot;' value='&quot;Al-Riyadh&quot;' />
                <semantic-value key='&quot;Yanbu&quot;' value='&quot;Al Madinah&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column aggregation='None' caption='Year (bin)' datatype='integer' name='[Year (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Year]' peg='0' size-parameter='[Parameters].[Parameter 1]' />
            </column>
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Gear_Type]' derivation='Count' name='[cnt:Gear_Type:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gear_Type]' derivation='None' name='[none:Gear_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[Options]' derivation='None' name='[none:Options:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Options]' derivation='Count' name='[pcto:cnt:Options:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_145804067119104001]' derivation='User' name='[usr:Calculation_145804067119104001:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_145804067119194115]' derivation='User' name='[usr:Calculation_145804067119194115:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ghroqu0hu96w1176gath0i824jp].[Action (Make,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action7_64BBCA3746C54A7A9A69C59618E2D1BC]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Make]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ghroqu0hu96w1176gath0i824jp].[Action (Year (bin))]'>
            <groupfilter function='level-members' level='[Year (bin)]' user:ui-action-filter='[Action2_B320BD1E281A4DE98F9741E0EF7562DD]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.0ghroqu0hu96w1176gath0i824jp].[none:Options:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Standard&quot;</bucket>
              <bucket>&quot;Semi Full&quot;</bucket>
              <bucket>&quot;Full&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0ghroqu0hu96w1176gath0i824jp].[none:Make:nk]</column>
            <column>[federated.0ghroqu0hu96w1176gath0i824jp].[none:Type:nk]</column>
            <column>[federated.0ghroqu0hu96w1176gath0i824jp].[Action (Year (bin))]</column>
            <column>[federated.0ghroqu0hu96w1176gath0i824jp].[Action (Make,Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ghroqu0hu96w1176gath0i824jp].[usr:Calculation_145804067119194115:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.0ghroqu0hu96w1176gath0i824jp].[usr:Calculation_145804067119104001:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.0ghroqu0hu96w1176gath0i824jp].[usr:Calculation_145804067119194115:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='10' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ghroqu0hu96w1176gath0i824jp].[usr:Calculation_145804067119104001:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0ghroqu0hu96w1176gath0i824jp].[none:Gear_Type:nk]' />
              <wedge-size column='[federated.0ghroqu0hu96w1176gath0i824jp].[cnt:Gear_Type:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Gear Type:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0ghroqu0hu96w1176gath0i824jp].[none:Gear_Type:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Options:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0ghroqu0hu96w1176gath0i824jp].[none:Options:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Count of Gear Type:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0ghroqu0hu96w1176gath0i824jp].[cnt:Gear_Type:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.2430939674377441' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ghroqu0hu96w1176gath0i824jp].[usr:Calculation_145804067119194115:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0ghroqu0hu96w1176gath0i824jp].[pcto:cnt:Options:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Options:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0ghroqu0hu96w1176gath0i824jp].[none:Options:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% of Total Count of Options along Table (Across):	</run>
                <run bold='true'><![CDATA[<[federated.0ghroqu0hu96w1176gath0i824jp].[pcto:cnt:Options:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5492265224456787' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#ffffff' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0ghroqu0hu96w1176gath0i824jp].[usr:Calculation_145804067119104001:qk] + [federated.0ghroqu0hu96w1176gath0i824jp].[usr:Calculation_145804067119194115:qk])</rows>
        <cols>[federated.0ghroqu0hu96w1176gath0i824jp].[none:Options:nk]</cols>
      </table>
      <simple-id uuid='{D6753134-86B2-41DB-8CA1-05F0749178A2}' />
    </worksheet>
    <worksheet name='Origin'>
      <table>
        <view>
          <datasources>
            <datasource caption='df_copy_saudi_arabia_used_cars' name='federated.0ghroqu0hu96w1176gath0i824jp' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0ghroqu0hu96w1176gath0i824jp'>
            <column datatype='string' name='[Make]' role='dimension' semantic-role='' type='nominal' />
            <column datatype='string' name='[Origin]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Gulf Arabic&quot;' value='&quot;United Arab Emirates&quot;' />
                <semantic-value key='&quot;Saudi&quot;' value='&quot;Saudi Arabia&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Make]' derivation='Count' name='[cnt:Make:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[Origin]' derivation='None' name='[none:Origin:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0ghroqu0hu96w1176gath0i824jp].[none:Make:nk]</column>
            <column>[federated.0ghroqu0hu96w1176gath0i824jp].[none:Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ghroqu0hu96w1176gath0i824jp].[Longitude (generated)]' field-type='quantitative' max='7548321.301095915' min='2342372.5862667649' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0ghroqu0hu96w1176gath0i824jp].[Latitude (generated)]' field-type='quantitative' max='4005205.0856736926' min='1604138.53944359' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.0ghroqu0hu96w1176gath0i824jp].[none:Origin:nk]' />
              <tooltip column='[federated.0ghroqu0hu96w1176gath0i824jp].[cnt:Make:qk]' />
              <geometry column='[federated.0ghroqu0hu96w1176gath0i824jp].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ghroqu0hu96w1176gath0i824jp].[Latitude (generated)]</rows>
        <cols>[federated.0ghroqu0hu96w1176gath0i824jp].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{4454472B-C143-4726-9411-8DAAB3CECD2B}' />
    </worksheet>
    <worksheet name='Percentage of Option per Price'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_copy_saudi_arabia_used_cars' name='federated.0ghroqu0hu96w1176gath0i824jp' />
          </datasources>
          <datasource-dependencies datasource='federated.0ghroqu0hu96w1176gath0i824jp'>
            <column datatype='string' name='[Make]' role='dimension' semantic-role='' type='nominal' />
            <column datatype='string' name='[Options]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[Options]' derivation='None' name='[none:Options:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Price]' derivation='Sum' name='[pcto:sum:Price:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Price]' derivation='Sum' name='[sum:Price:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0ghroqu0hu96w1176gath0i824jp].[none:Make:nk]</column>
            <column>[federated.0ghroqu0hu96w1176gath0i824jp].[none:Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-weight' value='bold' />
            <format attr='font-size' value='10' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#4602ab' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <size column='[federated.0ghroqu0hu96w1176gath0i824jp].[sum:Price:qk]' />
              <text column='[federated.0ghroqu0hu96w1176gath0i824jp].[none:Options:nk]' />
              <text column='[federated.0ghroqu0hu96w1176gath0i824jp].[pcto:sum:Price:qk]' />
              <color column='[federated.0ghroqu0hu96w1176gath0i824jp].[none:Options:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{FEB96FCA-723E-43EC-BDE5-B209991BF134}' />
    </worksheet>
    <worksheet name='Production Year of Cars'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_copy_saudi_arabia_used_cars' name='federated.0ghroqu0hu96w1176gath0i824jp' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Bins' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
              <range max='10' min='1' />
            </column>
            <column alias='Make' caption='Setting Categories' datatype='real' name='[Parameter 3]' param-domain-type='list' role='measure' type='quantitative' value='1.'>
              <calculation class='tableau' formula='1.' />
              <aliases>
                <alias key='1.' value='Make' />
                <alias key='2.' value='Type' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0ghroqu0hu96w1176gath0i824jp'>
            <column caption='Categories' datatype='string' name='[Calculation_214202486571724801]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 3]&#13;&#10;when 1 then [Make]&#13;&#10;WHEN 2 then [Type]&#13;&#10;END' />
            </column>
            <column caption='Gear Type' datatype='string' name='[Gear_Type]' role='dimension' semantic-role='' type='nominal' />
            <column datatype='string' name='[Make]' role='dimension' semantic-role='' type='nominal' />
            <column datatype='string' name='[Options]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Abha&quot;' value='&quot;Aseer&quot;' />
                <semantic-value key='&quot;Al-Ahsa&quot;' value='&quot;Eastern Region&quot;' />
                <semantic-value key='&quot;Al-Medina&quot;' value='&quot;Al Madinah&quot;' />
                <semantic-value key='&quot;Al-Namas&quot;' value='&quot;Najran&quot;' />
                <semantic-value key='&quot;Arar&quot;' value='&quot;Al Hudud ash Shamaliyah&quot;' />
                <semantic-value key='&quot;Besha&quot;' value='&quot;Aseer&quot;' />
                <semantic-value key='&quot;Dammam&quot;' value='&quot;Eastern Region&quot;' />
                <semantic-value key='&quot;Hafar Al-Batin&quot;' value='&quot;Eastern Region&quot;' />
                <semantic-value key='&quot;Jeddah&quot;' value='&quot;Makkah Al-Mokarramah&quot;' />
                <semantic-value key='&quot;Jubail&quot;' value='&quot;Eastern Region&quot;' />
                <semantic-value key='&quot;Khobar&quot;' value='&quot;Eastern Region&quot;' />
                <semantic-value key='&quot;Qassim&quot;' value='&quot;Al-Qaseem&quot;' />
                <semantic-value key='&quot;Qurayyat&quot;' value='&quot;Al-Jouf&quot;' />
                <semantic-value key='&quot;Riyadh&quot;' value='&quot;Al-Riyadh&quot;' />
                <semantic-value key='&quot;Sabya&quot;' value='&quot;Jazan&quot;' />
                <semantic-value key='&quot;Sakaka&quot;' value='&quot;Al-Jouf&quot;' />
                <semantic-value key='&quot;Taef&quot;' value='&quot;Makkah Al-Mokarramah&quot;' />
                <semantic-value key='&quot;Wadi Dawasir&quot;' value='&quot;Al-Riyadh&quot;' />
                <semantic-value key='&quot;Yanbu&quot;' value='&quot;Al Madinah&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column aggregation='None' caption='Year (bin)' datatype='integer' name='[Year (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Year]' peg='0' size-parameter='[Parameters].[Parameter 1]' />
            </column>
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='Count' name='[cnt:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year (bin)]' derivation='None' name='[none:Year (bin):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ghroqu0hu96w1176gath0i824jp].[Action (Categories)]'>
            <groupfilter function='level-members' level='[Calculation_214202486571724801]' user:ui-action-filter='[Action1_ACE83070559343B6A314100E5305153D]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0ghroqu0hu96w1176gath0i824jp].[Action (Categories,Make)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_6A14C30C9D464F8DB9E45C623C943EA6]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_214202486571724801]' />
              <groupfilter function='level-members' level='[Make]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ghroqu0hu96w1176gath0i824jp].[Action (Gear Type,Options)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_3453D25FCDCF4953A50B500FE0396F37]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Gear_Type]' />
              <groupfilter function='level-members' level='[Options]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ghroqu0hu96w1176gath0i824jp].[Action (Make,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action7_64BBCA3746C54A7A9A69C59618E2D1BC]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Make]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0ghroqu0hu96w1176gath0i824jp].[none:Make:nk]</column>
            <column>[federated.0ghroqu0hu96w1176gath0i824jp].[none:Type:nk]</column>
            <column>[federated.0ghroqu0hu96w1176gath0i824jp].[Action (Categories)]</column>
            <column>[federated.0ghroqu0hu96w1176gath0i824jp].[Action (Gear Type,Options)]</column>
            <column>[federated.0ghroqu0hu96w1176gath0i824jp].[Action (Categories,Make)]</column>
            <column>[federated.0ghroqu0hu96w1176gath0i824jp].[Action (Make,Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='title'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year (bin):&#9;</run>
                <run bold='true'><![CDATA[<[federated.0ghroqu0hu96w1176gath0i824jp].[none:Year (bin):ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Cars:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0ghroqu0hu96w1176gath0i824jp].[cnt:Year:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0ghroqu0hu96w1176gath0i824jp].[cnt:Year:qk]</rows>
        <cols>[federated.0ghroqu0hu96w1176gath0i824jp].[none:Year (bin):ok]</cols>
        <show-full-range>
          <column>[federated.0ghroqu0hu96w1176gath0i824jp].[Year (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{AB655D08-7760-4EF4-A349-7915122BDA72}' />
    </worksheet>
    <worksheet name='Region'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='11'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_copy_saudi_arabia_used_cars' name='federated.0ghroqu0hu96w1176gath0i824jp' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Bins' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
              <range max='10' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0ghroqu0hu96w1176gath0i824jp'>
            <column caption='Gear Type' datatype='string' name='[Gear_Type]' role='dimension' semantic-role='' type='nominal' />
            <column datatype='string' name='[Make]' role='dimension' semantic-role='' type='nominal' />
            <column datatype='string' name='[Options]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Abha&quot;' value='&quot;Aseer&quot;' />
                <semantic-value key='&quot;Al-Ahsa&quot;' value='&quot;Eastern Region&quot;' />
                <semantic-value key='&quot;Al-Medina&quot;' value='&quot;Al Madinah&quot;' />
                <semantic-value key='&quot;Al-Namas&quot;' value='&quot;Najran&quot;' />
                <semantic-value key='&quot;Arar&quot;' value='&quot;Al Hudud ash Shamaliyah&quot;' />
                <semantic-value key='&quot;Besha&quot;' value='&quot;Aseer&quot;' />
                <semantic-value key='&quot;Dammam&quot;' value='&quot;Eastern Region&quot;' />
                <semantic-value key='&quot;Hafar Al-Batin&quot;' value='&quot;Eastern Region&quot;' />
                <semantic-value key='&quot;Jeddah&quot;' value='&quot;Makkah Al-Mokarramah&quot;' />
                <semantic-value key='&quot;Jubail&quot;' value='&quot;Eastern Region&quot;' />
                <semantic-value key='&quot;Khobar&quot;' value='&quot;Eastern Region&quot;' />
                <semantic-value key='&quot;Qassim&quot;' value='&quot;Al-Qaseem&quot;' />
                <semantic-value key='&quot;Qurayyat&quot;' value='&quot;Al-Jouf&quot;' />
                <semantic-value key='&quot;Riyadh&quot;' value='&quot;Al-Riyadh&quot;' />
                <semantic-value key='&quot;Sabya&quot;' value='&quot;Jazan&quot;' />
                <semantic-value key='&quot;Sakaka&quot;' value='&quot;Al-Jouf&quot;' />
                <semantic-value key='&quot;Taef&quot;' value='&quot;Makkah Al-Mokarramah&quot;' />
                <semantic-value key='&quot;Wadi Dawasir&quot;' value='&quot;Al-Riyadh&quot;' />
                <semantic-value key='&quot;Yanbu&quot;' value='&quot;Al Madinah&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column aggregation='None' caption='Year (bin)' datatype='integer' name='[Year (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Year]' peg='0' size-parameter='[Parameters].[Parameter 1]' />
            </column>
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Make]' derivation='Count' name='[cnt:Make:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ghroqu0hu96w1176gath0i824jp].[Action (Gear Type,Options)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_3453D25FCDCF4953A50B500FE0396F37]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Gear_Type]' />
              <groupfilter function='level-members' level='[Options]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ghroqu0hu96w1176gath0i824jp].[Action (Year (bin))]'>
            <groupfilter function='level-members' level='[Year (bin)]' user:ui-action-filter='[Action2_B320BD1E281A4DE98F9741E0EF7562DD]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ghroqu0hu96w1176gath0i824jp].[none:Make:nk]</column>
            <column>[federated.0ghroqu0hu96w1176gath0i824jp].[none:Type:nk]</column>
            <column>[federated.0ghroqu0hu96w1176gath0i824jp].[Action (Year (bin))]</column>
            <column>[federated.0ghroqu0hu96w1176gath0i824jp].[Action (Gear Type,Options)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ghroqu0hu96w1176gath0i824jp].[Longitude (generated)]' field-type='quantitative' max='9607186.0333641153' min='1189079.4685494634' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0ghroqu0hu96w1176gath0i824jp].[Latitude (generated)]' field-type='quantitative' max='4291991.9082399663' min='82938.625832640566' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0ghroqu0hu96w1176gath0i824jp].[none:Make:nk]' />
              <text column='[federated.0ghroqu0hu96w1176gath0i824jp].[cnt:Make:qk]' />
              <lod column='[federated.0ghroqu0hu96w1176gath0i824jp].[none:Region:nk]' />
              <geometry column='[federated.0ghroqu0hu96w1176gath0i824jp].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ghroqu0hu96w1176gath0i824jp].[Latitude (generated)]</rows>
        <cols>[federated.0ghroqu0hu96w1176gath0i824jp].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{867116B3-779E-4985-AF53-0321054D15E1}' />
    </worksheet>
    <worksheet name='Total Price (in SAR)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_copy_saudi_arabia_used_cars' name='federated.0ghroqu0hu96w1176gath0i824jp' />
          </datasources>
          <datasource-dependencies datasource='federated.0ghroqu0hu96w1176gath0i824jp'>
            <column datatype='string' name='[Make]' role='dimension' semantic-role='' type='nominal' />
            <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Price]' derivation='Sum' name='[sum:Price:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0ghroqu0hu96w1176gath0i824jp].[none:Make:nk]</column>
            <column>[federated.0ghroqu0hu96w1176gath0i824jp].[none:Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='46' />
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='15' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#4602ab' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0ghroqu0hu96w1176gath0i824jp].[sum:Price:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{9DFF05ED-2BA8-4C3B-BA49-4E420D2D9C24}' />
    </worksheet>
    <worksheet name='Transmission'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_copy_saudi_arabia_used_cars' name='federated.0ghroqu0hu96w1176gath0i824jp' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Bins' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
              <range max='10' min='1' />
            </column>
            <column alias='Make' caption='Setting Categories' datatype='real' name='[Parameter 3]' param-domain-type='list' role='measure' type='quantitative' value='1.'>
              <calculation class='tableau' formula='1.' />
              <aliases>
                <alias key='1.' value='Make' />
                <alias key='2.' value='Type' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0ghroqu0hu96w1176gath0i824jp'>
            <column caption='Categories' datatype='string' name='[Calculation_214202486571724801]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 3]&#13;&#10;when 1 then [Make]&#13;&#10;WHEN 2 then [Type]&#13;&#10;END' />
            </column>
            <column caption='Gear Type' datatype='string' name='[Gear_Type]' role='dimension' semantic-role='' type='nominal' />
            <column datatype='string' name='[Make]' role='dimension' semantic-role='' type='nominal' />
            <column datatype='string' name='[Options]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column aggregation='None' caption='Year (bin)' datatype='integer' name='[Year (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Year]' peg='0' size-parameter='[Parameters].[Parameter 1]' />
            </column>
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Gear_Type]' derivation='Count' name='[cnt:Gear_Type:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gear_Type]' derivation='None' name='[none:Gear_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ghroqu0hu96w1176gath0i824jp].[Action (Categories)]'>
            <groupfilter function='level-members' level='[Calculation_214202486571724801]' user:ui-action-filter='[Action1_ACE83070559343B6A314100E5305153D]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0ghroqu0hu96w1176gath0i824jp].[Action (Gear Type,Options)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_3453D25FCDCF4953A50B500FE0396F37]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Gear_Type]' />
              <groupfilter function='level-members' level='[Options]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ghroqu0hu96w1176gath0i824jp].[Action (Year (bin))]'>
            <groupfilter function='level-members' level='[Year (bin)]' user:ui-action-filter='[Action2_B320BD1E281A4DE98F9741E0EF7562DD]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ghroqu0hu96w1176gath0i824jp].[none:Make:nk]</column>
            <column>[federated.0ghroqu0hu96w1176gath0i824jp].[none:Type:nk]</column>
            <column>[federated.0ghroqu0hu96w1176gath0i824jp].[Action (Year (bin))]</column>
            <column>[federated.0ghroqu0hu96w1176gath0i824jp].[Action (Categories)]</column>
            <column>[federated.0ghroqu0hu96w1176gath0i824jp].[Action (Gear Type,Options)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='pane'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#4602ab' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f12554' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ghroqu0hu96w1176gath0i824jp].[none:Gear_Type:nk]</rows>
        <cols>[federated.0ghroqu0hu96w1176gath0i824jp].[cnt:Gear_Type:qk]</cols>
      </table>
      <simple-id uuid='{9DD21B0C-5125-44B5-8F23-36B8F6D8438E}' />
    </worksheet>
    <worksheet name='Type'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_copy_saudi_arabia_used_cars' name='federated.0ghroqu0hu96w1176gath0i824jp' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Bins' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
              <range max='10' min='1' />
            </column>
            <column alias='Make' caption='Setting Categories' datatype='real' name='[Parameter 3]' param-domain-type='list' role='measure' type='quantitative' value='1.'>
              <calculation class='tableau' formula='1.' />
              <aliases>
                <alias key='1.' value='Make' />
                <alias key='2.' value='Type' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0ghroqu0hu96w1176gath0i824jp'>
            <column caption='Categories' datatype='string' name='[Calculation_214202486571724801]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 3]&#13;&#10;when 1 then [Make]&#13;&#10;WHEN 2 then [Type]&#13;&#10;END' />
            </column>
            <column caption='Gear Type' datatype='string' name='[Gear_Type]' role='dimension' semantic-role='' type='nominal' />
            <column datatype='string' name='[Make]' role='dimension' semantic-role='' type='nominal' />
            <column datatype='string' name='[Options]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Abha&quot;' value='&quot;Aseer&quot;' />
                <semantic-value key='&quot;Al-Ahsa&quot;' value='&quot;Eastern Region&quot;' />
                <semantic-value key='&quot;Al-Medina&quot;' value='&quot;Al Madinah&quot;' />
                <semantic-value key='&quot;Al-Namas&quot;' value='&quot;Najran&quot;' />
                <semantic-value key='&quot;Arar&quot;' value='&quot;Al Hudud ash Shamaliyah&quot;' />
                <semantic-value key='&quot;Besha&quot;' value='&quot;Aseer&quot;' />
                <semantic-value key='&quot;Dammam&quot;' value='&quot;Eastern Region&quot;' />
                <semantic-value key='&quot;Hafar Al-Batin&quot;' value='&quot;Eastern Region&quot;' />
                <semantic-value key='&quot;Jeddah&quot;' value='&quot;Makkah Al-Mokarramah&quot;' />
                <semantic-value key='&quot;Jubail&quot;' value='&quot;Eastern Region&quot;' />
                <semantic-value key='&quot;Khobar&quot;' value='&quot;Eastern Region&quot;' />
                <semantic-value key='&quot;Qassim&quot;' value='&quot;Al-Qaseem&quot;' />
                <semantic-value key='&quot;Qurayyat&quot;' value='&quot;Al-Jouf&quot;' />
                <semantic-value key='&quot;Riyadh&quot;' value='&quot;Al-Riyadh&quot;' />
                <semantic-value key='&quot;Sabya&quot;' value='&quot;Jazan&quot;' />
                <semantic-value key='&quot;Sakaka&quot;' value='&quot;Al-Jouf&quot;' />
                <semantic-value key='&quot;Taef&quot;' value='&quot;Makkah Al-Mokarramah&quot;' />
                <semantic-value key='&quot;Wadi Dawasir&quot;' value='&quot;Al-Riyadh&quot;' />
                <semantic-value key='&quot;Yanbu&quot;' value='&quot;Al Madinah&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column aggregation='None' caption='Year (bin)' datatype='integer' name='[Year (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Year]' peg='0' size-parameter='[Parameters].[Parameter 1]' />
            </column>
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Type]' derivation='CountD' name='[ctd:Type:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ghroqu0hu96w1176gath0i824jp].[Action (Categories)]'>
            <groupfilter function='level-members' level='[Calculation_214202486571724801]' user:ui-action-filter='[Action1_ACE83070559343B6A314100E5305153D]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0ghroqu0hu96w1176gath0i824jp].[Action (Categories,Make)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_6A14C30C9D464F8DB9E45C623C943EA6]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_214202486571724801]' />
              <groupfilter function='level-members' level='[Make]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ghroqu0hu96w1176gath0i824jp].[Action (Gear Type,Options)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_3453D25FCDCF4953A50B500FE0396F37]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Gear_Type]' />
              <groupfilter function='level-members' level='[Options]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ghroqu0hu96w1176gath0i824jp].[Action (Make,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action7_64BBCA3746C54A7A9A69C59618E2D1BC]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Make]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ghroqu0hu96w1176gath0i824jp].[Action (Year (bin))]'>
            <groupfilter function='level-members' level='[Year (bin)]' user:ui-action-filter='[Action2_B320BD1E281A4DE98F9741E0EF7562DD]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ghroqu0hu96w1176gath0i824jp].[none:Make:nk]</column>
            <column>[federated.0ghroqu0hu96w1176gath0i824jp].[none:Type:nk]</column>
            <column>[federated.0ghroqu0hu96w1176gath0i824jp].[Action (Year (bin))]</column>
            <column>[federated.0ghroqu0hu96w1176gath0i824jp].[Action (Categories)]</column>
            <column>[federated.0ghroqu0hu96w1176gath0i824jp].[Action (Gear Type,Options)]</column>
            <column>[federated.0ghroqu0hu96w1176gath0i824jp].[Action (Categories,Make)]</column>
            <column>[federated.0ghroqu0hu96w1176gath0i824jp].[Action (Make,Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='69' />
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
            <format attr='font-size' value='15' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#4602ab' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0ghroqu0hu96w1176gath0i824jp].[ctd:Type:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{A3BB9D71-B354-429B-9629-0523481A17DB}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Used Cars Available Dashboard'>
      <style />
      <size maxheight='1080' maxwidth='1920' minheight='1080' minwidth='1920' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Bins' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
          <calculation class='tableau' formula='10' />
          <range max='10' min='1' />
        </column>
        <column alias='Price' caption='Settings Parameter' datatype='real' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='1.'>
          <calculation class='tableau' formula='1.' />
          <aliases>
            <alias key='1.' value='Price' />
            <alias key='2.' value='Mileage' />
            <alias key='3.' value='Engine Size' />
          </aliases>
          <members>
            <member alias='Price' value='1.' />
            <member alias='Mileage' value='2.' />
            <member alias='Engine Size' value='3.' />
          </members>
        </column>
        <column alias='Make' caption='Setting Categories' datatype='real' name='[Parameter 3]' param-domain-type='list' role='measure' type='quantitative' value='1.'>
          <calculation class='tableau' formula='1.' />
          <aliases>
            <alias key='1.' value='Make' />
            <alias key='2.' value='Type' />
          </aliases>
          <members>
            <member alias='Make' value='1.' />
            <member alias='Type' value='2.' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98518' id='74' param='horz' type-v2='layout-flow' w='99166' x='417' y='741'>
            <zone h='98518' id='51' param='horz' type-v2='layout-flow' w='99166' x='417' y='741'>
              <zone h='98518' id='6' type-v2='layout-basic' w='99166' x='417' y='741'>
                <zone h='98518' id='3' is-centered='0' param='C:/Users/ADIT/Pictures/tableau shape/bvbvb.jpg' type-v2='bitmap' w='99166' x='417' y='741'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='62778' id='37' is-centered='0' is-scaled='1' param='C:/Users/ADIT/Pictures/tableau shape/landscape rec bg remover.png' type-v2='bitmap' w='55625' x='43750' y='44352' />
        <zone h='68611' id='68' is-centered='0' is-scaled='1' param='C:/Users/ADIT/Pictures/tableau shape/vecteezy_transparent-pop-up-shape_14401629.png' type-v2='bitmap' w='22083' x='21823' y='18241' />
        <zone h='56574' id='58' is-centered='0' is-scaled='1' param='C:/Users/ADIT/Pictures/tableau shape/vecteezy_a-white-rectangle-with-a-black-background_53489486 - Copy.png' type-v2='bitmap' w='19063' x='22240' y='23981' />
        <zone h='29537' id='55' is-centered='0' is-scaled='1' param='C:/Users/ADIT/Pictures/tableau shape/vecteezy_a-white-rectangle-with-a-black-background_53489486.png' type-v2='bitmap' w='27135' x='71406' y='54907' />
        <zone h='28981' id='52' is-centered='0' is-scaled='1' param='C:/Users/ADIT/Pictures/tableau shape/vecteezy_a-white-rectangle-with-a-black-background_53489486.png' type-v2='bitmap' w='27135' x='44219' y='55093' />
        <zone h='11389' id='45' is-centered='0' is-scaled='1' param='C:/Users/ADIT/Pictures/tableau shape/vecteezy_neumorphic-rounded-rectangle_11888084.png' type-v2='bitmap' w='33906' x='52552' y='17500' />
        <zone h='9863' id='5' is-centered='0' is-scaled='1' param='C:/Users/ADIT/Pictures/tableau shape/syarah-removebg-preview (1).png' type-v2='bitmap' url='https://syarah.com/' w='9053' x='31925' y='2622' />
        <zone forceUpdate='true' h='13109' id='9' type-v2='text' w='21304' x='41823' y='1623'>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontname='Roboto' fontsize='20'>Used Cars Available</run>
          </formatted-text>
        </zone>
        <zone h='12870' id='14' name='Cars Available' w='14740' x='43854' y='30926' />
        <zone h='12870' id='15' name='Brands' w='14688' x='61458' y='30926' />
        <zone h='12870' id='16' name='Type' w='14583' x='78542' y='30926' />
        <zone h='70833' id='17' is-centered='0' is-scaled='1' param='C:/Users/ADIT/Pictures/tableau shape/vecteezy_transparent-pop-up-shape_14401629.png' type-v2='bitmap' w='19531' x='990' y='18148' />
        <zone h='7407' id='26' mode='compact' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='8698' x='53958' y='20093' />
        <zone h='7037' id='27' mode='compact' param='[Parameters].[Parameter 3]' type-v2='paramctrl' w='8750' x='63542' y='20093' />
        <zone h='51852' id='29' name='Production Year of Cars' w='16250' x='23281' y='25741' />
        <zone h='7037' id='32' mode='slider' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='10990' x='73490' y='19444' />
        <zone h='25278' id='38' name='Region' w='25260' x='72240' y='56481' />
        <zone h='24630' id='41' name='Options' w='25521' x='44896' y='56667' />
        <zone h='67593' id='61' is-centered='0' is-scaled='1' param='C:/Users/ADIT/Pictures/tableau shape/vecteezy_a-white-rectangle-with-a-black-background_53489486 - Copy.png' type-v2='bitmap' w='18646' x='1510' y='23704' />
        <zone h='53056' id='22' name='Categories' w='16042' x='2813' y='25278' />
        <zone h='9352' id='75' name='Total Price (in SAR)' w='19271' x='61042' y='45556' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='4550' minheight='4550' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='83' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98518' id='82' param='vert' type-v2='layout-flow' w='99166' x='417' y='741'>
                <zone fixed-size='280' h='98518' id='3' is-centered='0' is-fixed='true' param='C:/Users/ADIT/Pictures/tableau shape/bvbvb.jpg' type-v2='bitmap' w='99166' x='417' y='741'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='13109' id='9' type-v2='text' w='21304' x='41823' y='1623'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontname='Roboto' fontsize='20'>Used Cars Available</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='107' h='9863' id='5' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/ADIT/Pictures/tableau shape/syarah-removebg-preview (1).png' type-v2='bitmap' url='https://syarah.com/' w='9053' x='31925' y='2622'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='123' h='11389' id='45' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/ADIT/Pictures/tableau shape/vecteezy_neumorphic-rounded-rectangle_11888084.png' type-v2='bitmap' w='33906' x='52552' y='17500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='70833' id='17' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/ADIT/Pictures/tableau shape/vecteezy_transparent-pop-up-shape_14401629.png' type-v2='bitmap' w='19531' x='990' y='18148'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='68611' id='68' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/ADIT/Pictures/tableau shape/vecteezy_transparent-pop-up-shape_14401629.png' type-v2='bitmap' w='22083' x='21823' y='18241'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7037' id='32' mode='slider' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='10990' x='73490' y='19444'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7407' id='26' mode='compact' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='8698' x='53958' y='20093'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7037' id='27' mode='compact' param='[Parameters].[Parameter 3]' type-v2='paramctrl' w='8750' x='63542' y='20093'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='67593' id='61' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/ADIT/Pictures/tableau shape/vecteezy_a-white-rectangle-with-a-black-background_53489486 - Copy.png' type-v2='bitmap' w='18646' x='1510' y='23704'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='56574' id='58' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/ADIT/Pictures/tableau shape/vecteezy_a-white-rectangle-with-a-black-background_53489486 - Copy.png' type-v2='bitmap' w='19063' x='22240' y='23981'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='53056' id='22' is-fixed='true' name='Categories' w='16042' x='2813' y='25278'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='51852' id='29' is-fixed='true' name='Production Year of Cars' w='16250' x='23281' y='25741'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='139' h='12870' id='14' is-fixed='true' name='Cars Available' w='14740' x='43854' y='30926'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='139' h='12870' id='15' is-fixed='true' name='Brands' w='14688' x='61458' y='30926'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='139' h='12870' id='16' is-fixed='true' name='Type' w='14583' x='78542' y='30926'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='62778' id='37' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/ADIT/Pictures/tableau shape/landscape rec bg remover.png' type-v2='bitmap' w='55625' x='43750' y='44352'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='101' h='9352' id='75' is-fixed='true' name='Total Price (in SAR)' w='19271' x='61042' y='45556'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='29537' id='55' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/ADIT/Pictures/tableau shape/vecteezy_a-white-rectangle-with-a-black-background_53489486.png' type-v2='bitmap' w='27135' x='71406' y='54907'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='28981' id='52' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/ADIT/Pictures/tableau shape/vecteezy_a-white-rectangle-with-a-black-background_53489486.png' type-v2='bitmap' w='27135' x='44219' y='55093'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='273' h='25278' id='38' is-fixed='true' name='Region' w='25260' x='72240' y='56481'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='266' h='24630' id='41' is-fixed='true' name='Options' w='25521' x='44896' y='56667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D237C0F3-B00F-4BF2-9414-772CA96C7D1E}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Avg. price of year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ghroqu0hu96w1176gath0i824jp].[none:Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1C3C16A1-33FC-4D12-AB52-882952C9E30B}' />
    </window>
    <window class='worksheet' name='Percentage of Option per Price'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0ghroqu0hu96w1176gath0i824jp].[none:Type:nk]' type='filter' />
            <card param='[federated.0ghroqu0hu96w1176gath0i824jp].[none:Make:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{D6487BB0-7EED-47AE-9232-E4A279A37F6E}' />
    </window>
    <window class='worksheet' name='Region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0ghroqu0hu96w1176gath0i824jp].[none:Make:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0ghroqu0hu96w1176gath0i824jp].[none:Make:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{8CFB8541-3CDD-4AB7-B5F8-1FA41A0D5828}' />
    </window>
    <window class='worksheet' name='Origin'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{345E9DE7-81A3-4800-92AB-5EE9580275E5}' />
    </window>
    <window class='worksheet' name='Cars from saudi or not'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0ghroqu0hu96w1176gath0i824jp].[none:Calculation_951385449774084096:nk]' type='filter' />
            <card param='[federated.0ghroqu0hu96w1176gath0i824jp].[none:Make:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0ghroqu0hu96w1176gath0i824jp].[none:Make:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{F625AB72-D40B-41AE-83C8-745AD6DD6D09}' />
    </window>
    <window class='worksheet' name='Brands'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
      <simple-id uuid='{A6C6C521-EBB3-425B-9B21-EE1E832652F8}' />
    </window>
    <window class='worksheet' name='Type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
      <simple-id uuid='{51A8C00B-6D04-4093-BA96-C724D409A06B}' />
    </window>
    <window class='worksheet' name='Cars Available'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
      <simple-id uuid='{E837D585-AC9B-4E90-9887-6EA3A3D559FB}' />
    </window>
    <window class='worksheet' name='Production Year of Cars'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{10A4474D-4259-4DEC-A877-67D2A0CE9CC9}' />
    </window>
    <window class='worksheet' name='Transmission'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{756AB12B-98C7-45C7-A8B4-6F360644AD87}' />
    </window>
    <window class='worksheet' name='Options'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0ghroqu0hu96w1176gath0i824jp].[none:Gear_Type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{13E53CCC-9B3C-49DC-BAB4-3F6B75BC853A}' />
    </window>
    <window class='worksheet' name='Categories'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 3]' type='parameter' />
            <card pane-specification-id='0' param='[federated.0ghroqu0hu96w1176gath0i824jp].[none:Make:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ghroqu0hu96w1176gath0i824jp].[none:Calculation_214202486571724801:nk]</field>
            <field>[federated.0ghroqu0hu96w1176gath0i824jp].[none:Make:nk]</field>
            <field>[federated.0ghroqu0hu96w1176gath0i824jp].[none:Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A713B823-C4FB-4EB4-AE7E-449E2499E32E}' />
    </window>
    <window class='worksheet' name='Total Price (in SAR)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
      <simple-id uuid='{9C560689-E3E8-4E7C-9F13-42DEB458ED15}' />
    </window>
    <window class='dashboard' maximized='true' name='Used Cars Available Dashboard'>
      <viewpoints>
        <viewpoint name='Brands'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Cars Available'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Categories' />
        <viewpoint name='Options'>
          <zoom type='entire-view' />
          <highlight field='[federated.0ghroqu0hu96w1176gath0i824jp].[none:Gear_Type:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Production Year of Cars'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Region'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Price (in SAR)'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Type'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='14' />
      <device-preview selected='Desktop' visible='true'>
        <device name='Generic Desktop Monitor' type='Desktop' />
      </device-preview>
      <simple-id uuid='{B14BDA80-EB11-4812-BC6B-18DB4F3F2959}' />
    </window>
  </windows>
  <datagraph>
    <graph>
      <properties>
        <default-execution-subgraph-guid value='8c933536-1e63-4de8-95e3-1ab8afda919b' />
      </properties>
      <node-execution-subgraphs>
        <pair execution-subgraph-guid='8c933536-1e63-4de8-95e3-1ab8afda919b' node-guid='c5ef3192-10f9-42b8-9620-04f30c298830' />
        <pair execution-subgraph-guid='8c933536-1e63-4de8-95e3-1ab8afda919b' node-guid='46971594-d436-4283-80b2-ce1eab7441c1' />
      </node-execution-subgraphs>
      <nodes>
        <single-value-field-node fieldname='[Parameters].[Parameter 2]' fieldname-input-guid='7b32ed13-4c17-402b-b3f7-f97e0329f86b' node-guid='c5ef3192-10f9-42b8-9620-04f30c298830' value-output-guid='4d1ff059-eef2-4298-b1a3-bd4d71e7b4dc' />
        <_.fcp.DatagraphNodeAxisTitle.true...axis-title-node duplicate-index='0' fieldname='[federated.0ghroqu0hu96w1176gath0i824jp].[avg:Calculation_214202486568828928:qk]' node-guid='46971594-d436-4283-80b2-ce1eab7441c1' orientation='horizontal' sheet-identifier='{B81DCB29-8210-4C34-8027-8AD42F575499}' title-input-guid='4cb0237e-bc11-491d-9049-ae77a1c25aa9' />
      </nodes>
      <edges>
        <edge from='4d1ff059-eef2-4298-b1a3-bd4d71e7b4dc' to='4cb0237e-bc11-491d-9049-ae77a1c25aa9' />
      </edges>
      <pin-values />
    </graph>
  </datagraph>
  <thumbnails>
    <thumbnail height='192' name='Avg. price of year' width='192'>
      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
    </thumbnail>
    <thumbnail height='54' name='Brands' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAA2CAYAAACRF5YDAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAAq0lEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpH0azBGgEGp6nAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='52' name='Cars Available' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAA0CAYAAADc3zcIAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAApklEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxA2gfSUARkW13aHQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Cars from saudi or not' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Categories' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Options' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAWbklEQVR4nO3dZ3Bc533v8e/ZvgAWvRAAAaKQFDtAk5JYRUW9OLaV2I6d5KbdSRwlTq7u
      JOPEaXLGE9n33iT2WPZ1ZDuOFSaxY8eWLMksoiiSIikWkSABUCQBAiBRiLroi7L1yYsVKRbg
      7MICFgs+/8+MZsQ9D84+e3Z/pzzlHEMppRBCU5b5roAQ8+l6AMbGxuazHkLMi+sBCIVC81kP
      Iaah6LxyiXMNLUx9rh7hyKFDhCI/39ptH6BmQsy57ks1nGpXrM4ZZ+/RcUo8AUZ8fpYvL+c7
      393JR375U+Tl5xP0j3K85hxrqqvpbG5g1Odj+boNtF6oxerJZ82KCowp1i/XACKptbZcpmL5
      ckqWrsHbdona+ousKE7hrbp2yssrWFlZwukTJ6g5tJsNVRXs2fMmZ86ep9ijOH76LMfPNpCa
      mjLt+iUAIqktX72GhrrT1NWcYMmKdYSDfq60dZKTnY0KjtM3NAqAJz2DtrZ2XGnpOFxu7DYL
      yprKAzs2s2/XKwTCU6/fuNYMOjw8TEZGRsI+mBDxUQz19zEetFC4KJd/f/Ff2PHQ4xQXFTAx
      OoQvaOCyQprHw9WrXRQtLmJ81EeKy8Zk2IJvsA9rSgZ5WelTrv16AHp7e3E6nQn9aELMVCQS
      wWKZvROX6xfBTqdTjgBCO3INILQmARBakwAIrUkAhNYkAEJrEgChNQmA0JoEQGhNAiC0JgEQ
      WpMACK1JAITWJABCaxIAoTUJgNCaBEBoTQIgtCYBEFqTAAitSQCE1iQAQmsSAKE1CYDQmgRA
      aE0CILQmARBakwAIrUkAhNYkAEJrEgChNQmA0JoEQGhNAiC0JgEQWpMACK1JAITWJABCaxIA
      oTUJgNCaBEBoTQIgtCYBEFqTAAitSQCE1iQAQmsSAKE1CYDQmgRAaE0CILQmARBakwAIrUkA
      hNYkAEJrEgChNQmA0JoEQGhNAiC0JgEQWpMACK1JAITWJABCa7b5rsCcUArlHwdvO1xtQHk7
      YKQPJnycChey21KF22kny+OmMDedssJMyguzSXHZMQxjvmsvpqAiYRgbhq4m6GpCDXbDaD8E
      JvhOZBO9tlyyPG7ys9MoLciksjibLI8bq9V8H39HBUCN9kP9QdS5Q9BaF91gt+hlNW+Tddvr
      qS47y0pyuWdVCduqlpCflSZhmG+RCKqzEer2oy4eg85GCAVvK3aOXBrw3fSa1WJhyaJMqpYV
      smN9OctLc7Fabg+DoZRSAMPDw2RkZMzRJ5k7SinobEQd2An1B8E/Zlp+F6t5ngdMyzjsVqqX
      FfHxX1jDmsqCKTecmDsq6Ifa/ajDP4D28xAJm5Z/hk/QwKJpl1sMg5KCDD66fRUPbKzE7bRf
      X7agA6D62lB7vwVn9kI4FNffxBOAG1UtK+S3ntjAyrI8OSLMtUgEVbcftecF6G6O+89iBeBG
      +VlpfPrhKh65Zyk2m3VhBkCFQ/DW91F7X4BJ8z3+rWYaAACb1cLjm+/iN5/4EJ4U54z+VsSn
      u38Uy8t/T+65VyH6k4zbTAJwzaryfP7wlzcvvGsANdiN+o9n4dLJhL1nKBzh1SMXqL3Uyed+
      fQfLSnIT9t53OqUUR+ta+doP32Z50MWzWLBifsozG85f7uVPvvazBdQMqhSq4yLq+f+Z0B//
      jdp6hvnc13dz+Oxl1Az3UuJ2kYji+6/X8tyLBxgem+SdQD5vOqoT9v6TgdDCCYBqOo36xu/B
      QOe81mPcH+TLOw+x+3ijhOADCIcj/NPLJ3hxdw3hyLXtaPDPobvps+ckrB5Jfw2gFNBaj3rh
      szAxMrM/dqZA6WooXY2RXwapWfQ7cmkJeRgd99PZN0LT1X7OX+5lZMw/o1XbrBb+96e28eDG
      Srk4nqGIUnznp+/w44Pnply+zdHJ54MvYVGRmxcYFsjIg4r1GIVLIXcxuDw0Wovo9xt0ekdo
      7RriXEs3PQO+G4I1vaS/BrjaN8xPd+7ht/1+XPH8gWGBZRsxNj0FK7dhuNNuWpz73n83CobC
      nL3UxRsnL3G0vo1gKPY5aCgc4av/eZRMj4uNKxbH+3G0p5TipYPv8pNDU//4AY4ECjnsXMcO
      /9noC24PbHgcY+OT0Z2ZxXpT+bumeI/W7iEOnG7m9ZOXGBiZmPa9kvoIMOkP8ifP76Kpo59q
      ex+fV7tID5kcBcqqMD7yDJStvW0jxUMpRVvPMDv31HCktjWuU5zsdDdffebDFGR7Zvx+OjrT
      2Mlff+t1gqGIablsq5+v218m696HMR74DYz0PPg5jrSj435eO3qRH+6vY3zy9k60pA2AUooX
      Xj7JS4fevf7aEruPZ9VrFIb6bi7scGF8+I9h6ycwrB/8oKYUHDvXyvM/ett073FN1dJFPPf0
      Y9hidLvrbtg3yWf/4RV6B30xy5YXZvFXv7aFxcX5P9cP/1Zd3lG+8oPD1DZ13/R60n5j51p6
      eO3IhZteaw2m8Tn1MRodZVzfN6fnYTz9Tdj+qVn58UN0e29Zu4SvPPNhKouzY5avbepm38lL
      s/LedyqlFN/bdTquH/+WtUv4+z96gsWLC2blxw9QmOvhi595hI9sX3nT60kZgEgkwrd/+g7B
      8O2HSW/YxZ+HnuCkczVkLsL47Lcwyqvn5EJ0UbaHLz39GKvK82OWfXFXDYNxHC101dDWx94T
      sXcSD91dyV/85v2kzUGHo9Nu4+mnNvGrj1Rx7deSlAE4UtdKQ1vftMsnIlaetz2K73f/Kdq6
      M4cy0lz8zW8/yOJ889PDwdEJXj16QZpGp6CU4t/2nCU8xQ7tRnevXMwff2IrdtvMr9/iZbEY
      /Ppj63liy4rov+fsnX5OoXCEHx+YvoUAokfFz3x8K+nFSxJSp6x0N5//jR2k3DCIaiqvHr6A
      byKQkDotJI1tXmoarpqWWZTj4U9/dTtOx9w3TFotFj7z1D2sKstPvgBcbO2loc1rWmbH+gru
      qy5PUI2iKotz+PQjVaZlRsb9HDrTkqAaLQxKKX729kXTNnnDgM9+fDOZHnfC6uW02/hfv7I1
      +QKw/1Sz6WlEmtvB73x4Y8I7nwzD4GM7VlNakGla7o13monIadB1YxMBjtW3mZbZtq6MDXcV
      J6hG7ysrzEquAITCkZgb66G7l1KQnWZaZq44bFY++eBa0zJNHV66vDPssb6D1Td3MzI+fS+7
      1Wrhkw+uw2KZn970pApAc0c/g6MmvXaGwcfuW5XAGt1uW1UZeZmp0y4PhiLUN/cksEbJ7eSF
      DtPlayoKWF46f6NrkyoA56/0mi5fVZ7Popz57XF1O+1sXltqWqauqUtag4ie/7/bYr4zeGBD
      ZYJqM7WkCkBD6/RNnxBtJkuGgWd3rzQf+9PU0S/XAUSHIXQPTN/xZbEY83Luf1Md5vXdb6CU
      ojPGufPq8oIE1cbciiV5psMeuvpHCcVo89ZB74CPQHD6qapFuelkpSeu5WcqSROAQDBsOu7G
      YbdSmDM/F7+3Sk91kWXSZBcIhhn2TSawRsnJOzJuOrtxcV76vI+fSpoABENh/CZ7ixSnPc7u
      cUXtycO8tnsvIxMh+tsvcLQm2gUfCfh4fc8eGi53UnPsALt27aOnu51X9hxkcnyEK1fNr0Fu
      lJc1/YUwMOP5BXeikRg7gfys+HZooYkR3nh9D2+drGW4p43du/fQOxzdWda+8xa7dr2Od2iA
      1157lY7eQQ7t20Vb3wjNTS3EOhFNmgCEIhHT0wab1RJ3F/nSFavJcBgMDg5x9uJlJkajp1an
      jh0lbLVisVppu9KOy5OO90o7hWl2Dhw/zoXGZkJxTKIASHGZ9wqbhVkX/qD5vAp3jG14jeFI
      5f4d9+Hv7+fQ0eM47DautZq2X+7AmZpGoKOexx57mFNv7SU1J5+6g/uoqaujZ9D8pgk39TsH
      g0EikeiP0HLLvXDm+vVgIEjE5MenIM6WlQhe7yCR0CR9PX1s2LSJ0zWXAXDbLJSWraPh3Vo2
      bn+A4ctnmMxdT+OJIyzJT8Gv7PRMhChOjf3F3DpZ6VbhUIhgMIhSCqXUbZ93vl83DOOmBoW5
      eD3W9xVvS1lopJd3GjvZuH0Lx/f9jKrq5Zw5c5GHd6ynest9THQ10G4p5eTLP8GSWUFooANb
      bjEFzkkaz19k0dYN0677pgDY7fElci64XREcdiuTgan3nNFTpHAcRwELockRLBmLWV+1Aith
      qtYs5cSxY2zc8hC1J45yz+ZtBAfbGE2t4N7KYpZkPkxWRgq17zZRlBLfWJTRCfNTHE+qe163
      ZzJIcTlMl4+adJDdKGxY8fX3UF9n8NCTj3H8+Fk2VS/lVF0TJZmKNvLYULmYycFBtm6+m/GR
      IZxp6Vy+UEfR0jWm606aKZFOhw230z7tufPYRIAR3yRpbvONCgaVq9bzfuuyjdycDHI3bwbg
      Q5u2RV/OXEHxe8OJcnOjk7A/VG3ey3uNUopu76hpmUSOa0lWmWnmk1i7vKPXjxZmUjLzeeyJ
      J67/e/t9WwHYuC7aKljwXrfMjq33AJCeGb315Yq162PWMWmuAWxWC7kZKdMuD0cUrT1DCazR
      9HoGfPgmpx/1meZ2xBHUO19eVipWkyEOHb3DBOKYfz2XkiYAhmFQush8oFn9LdPZ5su7l3tM
      r1eK89Jj3pVYBwXZHtPhzd7hcbpiHEnnWlJ9S6vKzDu6jr/bRjgyvx1MSinejjFgb2VZPgbz
      32M935x2G5XF5vf4ebu+NUG1mVpSBWDd0kWmU0Cv9o1w4Yr5cIm5NjAyEXNyR9XSwtmayrqg
      GUb0hgFmDpxumdde86QKQEF2GiX55qdBP3qzfl4Hmv3s7YtT3l7jmlSXnZVxzCHWxYYY46ba
      e4Y4fs78iDqXkioAhmHwCxsqTMucutARc4ThXBkYGeeVwxdMy1QvLyIzTVqArlm2OIcSk/nU
      Cvj+vloCMTrN5oJSKrkCANHpjg6Ttv5QOMI3XzqR8A0WiSj++ZVTMduuH7lnmZz+3MBus8bc
      qTV19PPK4fMJqtH7jta3Jl8AinI9bFpjPt6+qaOff91dk9BToQM1zbx52vyhDaUFmWxYMb/D
      e5PRo5uWxxw6snPPGdM7gcy23kEf3/ivY8kXAMMw+JWH1mGJsRv9ycFz7EnQHZrPtfTw/I/e
      jjnG/5MPrp3TW3osVLkZqTx673LTMpOBEM997wDdA3PfLDo67ufvvneAgZGJ5AsARO/AcH+M
      w2Y4ovjGj49xoKZlpg8UmZHzl3v54r/sZ8JvPrhtWUkO961P7J0qFpKPP7CGjFTznuHuAR/P
      fvsNekwm0XxQ1378F9+bfJWUATAM+J0nN8TcYMFQhH/4j8P8cH/drDelRZTiSO0V/vKFvQyN
      mg/rtRgGv//UvTjtSTOyJOnkpKfwPx6PPTThStcgn/v6Li629s3qjk2p6J3GP//NvZxpfP8Z
      E9YvfOELXwDw+/24XHHdgDwhUt0OMtJcHIvRRBZRijONnVzpGmDFkrxZuaWeb9zPd159h+++
      eiqui+2P7VjN45vvSorpmsnKMAwqirK5cKWP7n7z0xzfRICDNS3YbRaWlkz9eNOZiEQivHm6
      medePHjbrMOkvTs0RJup/vEHR3g9jntKQnSM/i/tWM2TW1eQ5XHP+Ac5Phlk/6km/vONOvqG
      4nv43qqyfL70B4/icug98jNefUNjPPOVV/EOj8dVvqI4m197tJp7VpbgsM/s+iocjlDf0sO/
      7z1DfVP3lJNjkjoAAGOTAZ799hvUN8c/DijN7WDz2lLuqy5nZVm+6ZMdJwMhmjq8HKlt5XDt
      ZbxD8X0xAAVZafy/P3pcng0wQ/XN3fz1t/Yx4Z++Q/FWpQWZ3P+hCu5dXUJZYda0UykjEUVH
      7zCnG65y4HQzje1e01OppA8ARO8r/2f/fzeXOwdn/Lcuh43CXA8l+ZlkpLlwOWwEQuHrj0hq
      7x1mfCIQc+rcrbI8bp57+lHKC7Ol3X+Grj1/4UsvHpzxaFCLYZCe6qSkIJPCHA+pbgdWi8GE
      P0ind5T2niEGRyfiejwSLJAAAPQPj/PF7+7nQoxbpyRCXmYqf/u7D8Uc6CWmp5Ti2Lk2/u+/
      vTWjI8FsWzABgOikmP+z8xAnzrfPWx0qi7P5q996gMLcdNnzf0BKRU+HvrzzIP1xXhPMtgUV
      AIBQOMx/HTjHzt1nEjqK0DCiwxx+/6l7Y071EzPTO+jjH79/5KbmyUSoKMpeeAGA6OGzoc3L
      Cy+diHk7xdlQmOvh9z56D5tWl87bTVzvdMFQmN3HGtm5p2bObynjctj4pfvX8MkH1y7MAFwT
      Ckd4450mfnygnrae4Vlff3a6m49uX8UvbltJqkxxTAjv0Bg/3F/PvpOXGJ/lawO7zcr26jI+
      /XAVJfmZGMYCPAWaSiAY5mhdK3tPNHKupSeu5/xOx2oxKC/K5pF7l/HghkpS3Q7p4EowpRTe
      4XH2HGvgzdMtdPWPfKBe4dyMFLZXl/PklrtYnJ9x0/d5RwTgRl3eEU43XOVsYxcNbX30DY3F
      3HiZHhdLF+dQtbSQDSuKKS/KjjkYTyRGKBzhwpVeaho6qWvq4krXYMzHULmcNkrzM1m3dBHr
      lxextnLRtHOT77gAXKOUirb3j/npHhilf3icsYkgoXAYq8WC22Uny+OmMMdzvX9A9vTJLaIU
      k/4g/cPj9Az4GPJNMhkIEomAw2YhKz2F/KxU8jJTcbvscQ2huGMDIEQ8knI0qBCJIgEQWpMA
      CK1JAITWJABCaxIAoTUJgNCaBEBoTQIgtCYBEFqTAAitSQCE1iQAQmsSAKE1CYDQmgRAaE0C
      ILQmARBakwAIrUkAhNYkAEJrEgChNQmA0JoEQGhNAiC0JgEQWpMACK1JAITWJABCaxIAoTUJ
      gNCaBEBoTQIgtCYBEFqTAAitSQCE1iQAQmsSAKE1CYDQmgRAaE0CILQmARBakwAIrUkAhNYk
      AEJrEgChNQmA0JoEQGhNAiC0JgEQWpMACK1JAITWJABCaxIAoTUJgNCaBEBoTQIgtCYBEFqT
      AAitSQCE1iQAQmu2a//j9/sZHh6ez7oIkXDXA+B0OsnIyJjPuohZpJRCKYXFIgd5M7J17mCG
      Ycx3FZLeHRUAb1cbdXV1dHuH6e/vNy17tbNz2mWdnVdnu2oJZxjGHRGAjitN1NXVMTA6OU0J
      xfDwCISDnDxxnIbm1vcXhXxc6eij9UrbtOu3TbtkAZqcGCdi2El3Gxw8eIKNm7cw1NXOBA6c
      TBCYmCSnbCV9bU2M+CN4nFZaWjsoLM7nYmMXy8qL6PL2E8GgqKh4vj+OACbHx7A600hzhKk/
      exZcaViDI4yO+HB4MvCk56ECk2SkFuMbHyfLYqHx0iVKC9LpHfYzNmHBCPqmXf8ddQTIKypj
      ZWUhF5s6KSktJS9V0Tfip7uzG6srlXV3leIdHCSroIy8bA99fX2E/GP0DQxRtGQZ4cAky1es
      xON2zvdHEe9ZXHEXS/LsnD1zjs7+MWxWK/aUdCqKsymuXIkRnCQQCAKQX1TKsvISAoEAgckJ
      AqFIzPXfUUcA//gI7V1eKiormBjsos8HuZkpFBYuIjsrDZw2lhTZ6b96GYfLQ06KhZDhIC8/
      G4sthXS3m4bGZtKzc+f7o4j3+Ia89AyMsbq6mp62FmxpaaSn2HEaYZTDijMvh3A4AhYbhfnR
      760wN5POwVEWFRYRDlswIinTrv+/AVjStgLqiH4tAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Origin' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29aZBk2XUe9t23v3y5VmbtVV29Ts9gZjAzxAwGhICZoQRuEEmYpkw5RNOy
      FFTYYdo/Hfrr//5nRzikCO0hiopgSAqTtBEUBdIQABKAxsJgG/T0TE9X19pVlVW5vdze6h+F
      c/vly5db5culp/OLqKjuqqyX9708596zfOccVq1WfVmWscCzB9/30Ww20W634fs+LMtCIpFA
      pVLBysoKf53jOPA878rvwxjjX7Zto9FowPM8yLIMXdfBGIMoivB9HycnJ1AUBYVCAa7rwnXd
      OG6199qazaavadpE32SB+YTjOLi4uIDneajValhZWcFHH32EGzduAECH0AuCEOt7+76PWq2G
      RCIBXddxenqKdruNlZUVKIoC13Xh+36s7xmFeO9qgacKFxcXME0T5XIZsizD8zysr69jd3cX
      oiiiVqtxQYxbGH3fRy6Xw/n5OXZ3d5FKpbC1tQVRFOE4zlSEH1gowDMLz/NgWRZqtRqazSYY
      YxAEAScnJ9jZ2YFpmjBNk58CcQqkIAhQFAXHx8eQZRnXr1+HLMtTFXyCNNV3W2BuUK1WUSwW
      kcvlYJomfN/H9773Pbz44osAAFmWsbq6CsYYAPDv40KWZZRKJVQqFWxtbUEQBNi2Hcu1r4LF
      CfCMQhAEuK4LwzDAGMP5+Tnq9Tosy+I7MTm/tVqN/53v+/A8D57njbRbi6IIxhj29/dRr9eR
      zWbBGJu4kzsIixPgGYRt23AcB6qqotFowLZtrK2tQVEUnJ+fY2lpCc1mE8Clo6woCorFIndY
      SfCHORUYY5AkCcViEe12G5ubmxAEAQcHB8hkMmNFl+LAQgGeMbTbbTx8+BC1Wg0bGxs4OjrC
      9vY2NE1Ds9lEq9WC4zjIZDJwXReCIKDRaGBlZQWWZcE0TX5q+L7fVwkkSUK73cbh4SEKhQLy
      +Twcxxnqb6eFhQn0jIExhvX1ddy9exe2beP27ds4Pz/nUSBVVZFKpfhrHcdBo9GAZVlgjEHT
      NNTrddRqNdRqNbRara5dXBAEyLKM4+NjVCoV7OzsQNM0OI4D4NIB1zQNlmVN/f7D6DoBPM9D
      q9XiyQnP82DbNnRdhyAIPKGxwNMLSnwlk0kIgoBsNgsASCaTODg4QCqV4p91q9VCoVDoMHt0
      XQdwKei1Wg2yLMN1XYiiCEmSUK/XUSwWsbGxAUmSupxcz/NQKBRwdHSE9fX1mfoBEvDEsXFd
      F7VajWumIAhotVpQVZUrhaZpSCQSC0V4CuH7PhqNBjdjSGhlWYZlWdjf38ft27c74v6UoY2C
      53mQJAmWZUHXdYiiiIODAyQSCVy/fh2O4/QUbnKAyRmfFaRGo4FmswnHcWCaJigrTMLdarWQ
      SCTgeR4YY6jX62i1WtA0reNUWGD+0W63eYRHEAT+3bIs7O3twTRNnJ+fY319Ha1WCwA6bPYo
      u13XdZ4wq9Vq2Nzc5JSHfiDlmbUTLNi2DcuyulLPdKOiKEIQBB7GIs1tNBq4uLjgiZRZ38gC
      /eH7PlzXRaVSQTKZhCzLkGUZoihid3cXN2/exJtvvglZlnFycgJVVTv4O3SNIGRZ5maQIAjY
      3t6G4zjc1u8H13WRzWZRLpdnuoFyJ9hxHMiyzDOC9J04IKQEZOeRYjiOw0+QBeYbFNevVCqo
      VCrwPA+O46BQKEAQBDSbTeTzeZimicPDQ4iiiEQi0eWs0s/L5TKKxSKuX7+ORCLBfYthNkPG
      GBKJBOr1euw8o1Eg0bFm2zYMwwDwhPgUZPERemnrrBMaC/SH67potVowDIPv/uVyGYIgoN1u
      o91uo1QqIZfLgTGGjY0N7O/vY3l5mfsJvu9DkiQ4joPd3V2srKxAVVW02+0uGRkU5hQEAXt7
      e8jn89wcm4UVIdBiAHTs7JSiVhRlqAupqjq5VS4wNihzW61WeUiSojvVahWu68JxHC6Uruti
      Z2cHpVIJ5+fnODk5wcXFBf++s7MDRVG4eRS0HIYhz/m+D8MwYJom9vb2YNv2TEwhiYSdjiM6
      BQCMxNOoVCp8d1k4xfMFEshkMtnh71F4u16vAwDS6TTfBOn36+vrXLDr9TpEUYSiKB3Etavw
      hTzP4+bWysrKzEKiEpk4sizzB0GQZRmmaQ51Id/3cXR0hOXl5Y4HIkkSJElaKMWMcXJyAlEU
      efgzyOkpFAqo1WooFovIZrN4+PAhVlZWwBiDZVkQRRGFQoFbA1H+XnDXH5Yj5DgOUqkUvvWX
      34WuyUilUshkMnxtdM1JMkQ7EmG6rqPRaCCRSADASOlqx3EgiiLa7XbX7xhjSKfTEEUxhiUv
      MCooAkQJrCCRrV6v4+bNmxBFEY8fP4YkSdja2kK73UYikYCiKBBFEaVSiUePeiFsw/eSHzKX
      AOAP//Sb+O7DFnwAwl88QkJysVlIYaNgYHN1GRvrqzxhR+uO01fgCsAY4+SocrmMTCYz0q5N
      +YIokJ0Z9BPI8aEdRpIkHnpbIF7U63Ued2+1WkgmkzwiRJG8er2OQqGApaUlHB8fc2VRFAX1
      eh1LS0toNBpoNBo8gjPKhhaMKB4dHeP+7gF+8qiIo4YGX7hUKlfNoQbggzLDB2UXuLcL5ryP
      XELASkbD1koWz93cxsb6Wmy1A+zs7My3LAuNRoM7wLZt82hAtVpFOp0eeKFKpYJMJjPWYgzD
      WDjTMcN1XRwdHSGRSMB1XRweHuLGjRtot9vQdR3FYhGKoqBSqWB1dZXvsEGztVgsQpZlJJNJ
      AJebZbPZ5I4r7dC98gStVgsf7z7CvY+P8NFRBTVXgy/pAOv+m15gjAG+B8Ft4GdvZ/ClL74B
      URTH9hkkcmyWlpb4D4vFYuQN9VtcHLFcy7KgKMriFIgRnufh4cOHSCQSyOfz2NjYgGmacByH
      bzgnJydgjOHs7AyFQqHLZ5MkqYMgxxjjwRKq7aUQaTKZhCRJOD09w0cP93Fv7xR7xSYcKQWI
      Kny29MTuGGEHv5RFBlc08K2HNu7t/3v8+jufxvWd7bFOA3Z2duaHhTe46w9zAjDGUKlUhjop
      +kGWZTSbzY6OBAuMB9M00W63UavVkEqleEcGTdNgGAYODg6gqiqy2SwODw+xsbHRdQ0qnZQk
      Cel0ukM5KEHqeR7uf/gR/vMPP8CJ6aFYZ2BaGmC9uUTjgDEGwWngszcN/OLbb175NJCiFheM
      4gzjcBBPaBxQ0UQymexwnqgyibSc/IWngYNEEQzi0wTpJNN470qlwu30TCaD8/NzrKysdHym
      nudhaWkJlmVBkqLLQyRJQi6XQ7lc5p+BKIqoVqt4sLuPe7uP8dFRBW2WBORLZqkrOxAhjLTL
      j3p/rqjj2488fPB7f4L/4u2XcevGzsinQeQd0wXISRoEYhdeFZIkoVQqcVZhs9nkGm1ZVqQS
      UnYyGJWYZbiV+PK0G9Ia2+02ms0mv5elpSVu5lFlFpEK44Lv+2i325zQRpGcYBhT0zRUq1VO
      XyBiXC9QyLRarcLzPPzR176DgyqDIxmAoMCXC/Tmsd3HMPABlLwM/vmf3sPr1/fwS++8CUmS
      hj4NIhWAhM913b5hL76IAQ+vHxhj/FheX18fukiC1kcfMq1bEASoqtqx7mkohed5ODg4QD6f
      59Es27Z5HqVWq/FwYqPR4AEDy7JQr9eRy+ViU2DbtlGpVKAoCg9qUIKSTtezszMsLS3B8zw0
      m03uF5ycnEDXdZ4vIKXxfZ+vWdM0vHz3Bnb/8wl8Jk1d6MOg0+C7Bz7u/96f4Nfeegl3bl7n
      StsP7PT01A+HszzPQ6PR4KbGIDrEsJGifjdQqVT4BxIHyNQgp2wSIH69pmm8Oor4NmFQoZGm
      aSiXyzAMg2diNU1Du91GJpMZOxRMvH5BEJDP5zlPR1VVfrL6vg9VVXF6egpJklCpVDiNmRT3
      +PgYAJDL5bqSUZTg/JOvfxfvnYgA6w6HUq3BtMEYA+wmdrI+3vqZ23j+udt9O9t1KQAlTYgS
      S5lcuoCu6x27q+M4/IO8KiRJwvHxMVZXV2MnRFH7PYpqUTH4uPA8D+VyGdVqtYNEeHR01NFO
      BADPd/i+D03T4LouDg4OkMvlsLKygkajwSuvPM9DMpnsUoJ+hegkoERtv3//Pu7cucNPySCj
      l64jCALOz8+7ojv0VSqVoGkaFEXpysgGqfJ/8NVv4idFCX5oPY7jzNQkZYwBThvrho23f+YW
      PnX3dmQSrUMBbNtGvV6HLMu86isMoj7TB+W6Lo8qXBWyLGN/fx+bm5sT54IIgsBL/oIYNekH
      AHt7e1haWuraHUulEm/7AQCnp6ewbRsbGxu8uo4qoYibU6/XOY1EkiRomsafKdGWKeJi2zY3
      T0m5yHSk3E1QeHuB2qEsLS117djBZGiQmkB/R6YUYwz/6N/8OY5bRtd70ZpnSXdmjMF3LWwl
      bXzlnVexsb7WwW/jYVBKhlF9aBTCO0C1WoVt27xdxlUhSRIODg6wvb09tSZJYYGXJImX9fVS
      BhIECi2apsl30PDrHjx4wMO5FH4UBAHpdJo7v81mE7qucxONkomtVgulUgk3b97kOztFvYbp
      xzPMhiIIAq8LWFlZ6SDBAeDU6GAFWRiUMGs2W/iH//abqPqprrUNMoVGabEyDhhjEB0Tv/Dq
      Ov7KZ199ElX83d/93f+V7MSoDzNqwbRYVVWhKAqazeZYJwCAjlDhLOB5HufFU5iPQDtuMKLT
      L/NN5MJcLscjPrVajQsUcLl5ZLNZLli2bfMwY5TpOQopjIQ7l8v1VABJkrC/v49cLofDw0Mk
      Egmcnp5C13W0221uOh0cHPA2iqR8VAFGiqvrOm6sp/HD+3twhU7zMhhRDJpS4fsJKjaF1eNu
      neIJCj56bKJ8dojnbmxdnmBRibBRQUmWccAYQ7FYxPLy8lyUV2qaxgWwVqtxchjwxPmlUGwU
      jo+PsbW1xU+Ni4sL3obQdV2k0+mOXbXdbkOWZW43k9JdZWMRBAHVahWKokBV1S7FIWozcNkJ
      4t69e9B1HaqqolgswjRN7Ozs4PT0FJlMBrquw7IsHB0dwTAMrK6u4uLiAjdv3uQnkyRJuHf/
      Af7V1x/AE59YAyTMowoyKSCF4oMKE8wBXeUEYfBxLdnCf/uVtyHEQiiKQUvj1vZx0Wq1YJom
      F3SK8wNPoiD9Qra2bePk5ATn5+ewLItnuZPJJHK5XJdJEf4cxuG5eJ7HOy9HnaiiKOLi4gKJ
      RAKtVosT3MgESqVSPCAhiiLq9TpM0+Sn2dLSUleLHMdx8MLd2/il11YheE/M2KsmLMkUDedV
      6P/k4JNijPKsfDDs1RP433//z+ajM5wgCCiXy0ilum3IeYGu67xFDADuzJIdTKAPK5PJ8LBu
      vV5HqVSCKIrQNC2ykITIaQTa/a4KWlfU86TfmabJTbFEIoFms4lbt27xdd2+fZv37C+VSh3+
      ysbGRldkyLZtfP71V3BR/ha+s+fAj6nvWliJo5SagjG0kQ6yanzfRxWpeFY4rtBS+z3D6I4k
      zAuodSBwmfmuVCpd9Ibgg6eiceCS5UpUg+AH8+DBA+6IUtKKhG/YLHwvkC8RVa9bqVRQKBSQ
      SqWgaRq2t7extLSEzc1N7tf5vo9EIsETdPl8ntcHeJ7Hc0PhRrme5+FXf/4L2DEaUz3Rg6FZ
      xhhXiH7w/bhUdAzQzjEPPWL6gXaWZrMJWZaRyWS67HjgiTNdr9e5IJXLZVz/aeeEINLpNLLZ
      LDKZDKca0+5GkbmrwvM8GIbRwQei69frdei6jouLC+70h/+WdvegYg8yZ8hs+7NvfBfH1elu
      ZMFwK61xmA1k5iaQKIo4PDzEzs7OTPvEDwNd13njqF4oFosAwMNsZCplMhk4jtPhUGezWVSr
      1Y5oUjKZ5BnlRCIxVpadMszBjYWEulgsIpVKdTnxvSJxQXONrhNUElEUUTw/x7/442+j7KXg
      i6mZUiSCHef6RRZjUYCrmi2CIODi4gKFQuGp6CsUJLH1iv4UCgUeRtR1HaVSib+WkmO5XA4n
      Jyc8gRWMvwenslCi66qgtucU0yezipKY1Wr16jz6n54MFOUSRRH/4Vvvoexn4WP2ZmzQqe9n
      Ts5cAWq1GvL5/Nzv/oS1tTXU6/UOQlsQFKEghz6bzaLZbPL2gcBlDJ54P7VajZs/QZCgjttB
      mTg/+XyeKxZjjHOS+iU+hwFFxC4uSrh/YsGX5quiL6ikUUowUxPIdV2srKzg/Pwc2Wx2rn2A
      IAzDgOd5KJVKSCQSPDJE2V0yWch2NgwDpVIJ+Xx+6PeIazYX7c4Uj6esMl2ffj8qgj6B67r4
      xrs/uqz6mjPQpjPRE+CqoEhDsVjs2KGeBgiCgFwuh1arhXK5jGQyCdM0u3bUYNOxKFpAlIBT
      lpXoKbSLEdWbGKPDKIfrulhaWkKpVEKhUOBVX47jYGlpiUehrl27xv+ml6NLUaxarYbDoyPs
      H5/j8KyKk0oLZUsBU65eExI3aNcfFBKNRQHGCXfR0TRPSbBRQKS1o6OjyHJCQjab5SS5IKKE
      WJZlKIqCx48fY3V1lYf2KMJUqVQ6EoeKovTlYmmahtPT047MKnD5uWWzWRiGwTPRvbK2oiji
      /oNd/Ls//x5MSwSUFCDKABLwoQOyz7O3s/4sKYo1zMk2cwUARuO5zCPoJAuCCmEYY5z7H+U4
      Rz076qawtrbGfQAS+CBLlP6eyHO9+vYEuTVRlOBBOyVxmf7t//tj1MVl+JpPN97xGgqDzrr/
      07DCD8zBiCTP87C6uoqTk5OZ0mbHAWVTgcsePJVKBYlEgvfOoWZhUUoe/hklokRRHKpugUKt
      uVyOE+rq9XoX0cwwDJTL5cjscLAbR5RCSpKEr/7H/w91IfNUb1RRmHkegHa2eeMCDQMiytEY
      IKqNpj45rutCVVVUq1VOdAsjiqhGGHVDIKWjfAM9V0oylkolrK+vd50AZLpECbcoivjJ/Qf4
      0bELXxxOXIK8nFmZRMNm0mNRgHGd1zgaHE0TNFqUscuWj0STXl5e5oX6NHGHClZs246MAoU/
      pCArlApgRn021L6EQKzSZDLJqQxB9HN6y5UK/q9v3gOk9FCJrbDpMQuTaJRnFosCjGu6hLOM
      8wyqtiKbv9VqwbIspNNpzk4MmiAkxFTvEERUoQnx7ROJBBfaSqUy1ppFUUQ6ncbB4RF+8P59
      bK7mO+gXQdOH1i3LMt5978f4o28/gKvkxkqYzeKUp6DBINmcuQkEXO4S+XweFxcXXfmAcVmR
      ccP3fU4ECwo/8CTUScJi2zYajQZSqRSOjo54UXzwWr1ArxWEy5Gj4yQKqZfSe/ce4c/fLwHu
      MWS/jaTKsJLVkVIZbu+sYWV5mXeF/tOvfxtf/6AKfwzhD8N13Q7S2iRBCjAIM80EB/+ezIYg
      gqZAo9HoGTKcVhaZeP1At/BT9wyK21OCiBxhWZbRarU46xPo306GzCpd16HrOs8wXwWkmD94
      cAKf6YCkw4KOCw8olS4F8t3jInxrF4LTREqXUEUGvqCOzeeheyTCIz2XSWKYslHCXNChe8G2
      bTSbzZ7CP20GaaPR4MJI/TQbjQaAy4dOithqtTjPhpRCVVVkMhk+YJo6J4TDlrVaDZVKhWds
      6T5TqdSVd01FUXB0/BjFevfvOKkNDFBS8BIrqAp5+BGtTsbBNJ1hCoNOLQ9AE0Mm2X8nCtMk
      0AWTPDQ5he67Wq12nA6GYfDRsu12G5ZlcQeYBkAQK5ROOLKPg0Oqg/2YqJsFJcFGgSAIKJUr
      8EUFw4hgnBsaRcOCwhiHP9Arejbq2mNTACr3+6SCGncBl+YJ3Ws44kKgHZ7aIQZB0SP6N70+
      /Pftdrsr6TUqaCc8Oa+CCbNpVBVF/7hq4CRY9RX+efA9+w3oDjr9sSgARTnGrWIaF/Sw4zoZ
      fN9Hs9lEu93uKPq3LIt3hyDbPFwZRmsY1Cyg345F/kQwIUY5h2FBn0e10RrwyvkGCX4cfYaC
      yhGbzRLkusw6nDlO5IjaQlJTJ13XIyffULY26sOgHYq6v41jUgTrkIepdQ2DYuI/fngGIHqC
      z6zRyxwK0jbibLBFJ5LnefGGQTOZDMrlMnK5XJyXHRpkdowKyugClw+HGmT1eq2iKNzf6UVv
      8H2/owD+qqBTJtjecBRomnYpXHNGYQhzknqVZU4yXCoIQrwKQJ3P4hiXNGlYloVWq8WP1WHX
      26sbXBDBJFgcoP6jsizzGb/DmEEUcr0cYCgBc1RzFBTuoEkStPGnkUGOPWxDrT9M05xLp7he
      r8NxHCiKglQqNbK5Nkz0ghpnjTMzIQhqrUK9Og3D6Kgw6wVyoH9y/wFOGsIcUB8vEbXbE6bd
      S3Qi70St/Wq12lxlcclhpW5nowq/aZpDMTQpCjGorfwooJAq8OSk7beWYBOpb37vwWUf/zkE
      VaTR17T9x4mpGvFYiB48bm1rHBjnVCqVSlAUZahWhWQCxZ3xpMgTcKlk/UaVkilxfn6BByf1
      mQcmeoFyArMiQ070rKHETiaTgeu6KJfLqFQqM+kAcVW73LZtlEolpNPpoXd0SlpRljguUAIt
      WNzebzaz53n4i3e/jy+8kMfzBR+bRht/9YUUdL8Of05OZrL1g21Mpvr+URNiJo3gjFm6adoF
      wkPc4sKojrnrujBNE5IkXcmWpzbq407OjAKFZ8kEajabvGsdgTGG/YNDyLKMleVlLC3l+Cnw
      /r37+Cdf/T4sNvuwqO/73KEnE+ip9wEGQdd1pNNppFIpZLNZZLNZ5PP5id34KJx0378c19Rq
      tZBOp6/syE6yzJOcYhIcTdO6HPpUKoUb13fgen4XfeKFu3fwO7/yGQju7JNjRPmgvMo0yHJB
      zKdnFDNqtdrQ/W+oI9swwwEHYZIfpCzLXKkZY7xdY6vV4izaVCqFlz71fNffMsbw/J2beOPm
      R/jOwyYgzI8YBGuLp0Ggm587x2AiU6/fB0OTwdcQnwYA79ZGX8FuFEFuCHVRazab/Fr0PdgN
      Lfjv8Po8z+sYfjEJRBXYCILQ0yeIwt/8tb+Gx//8j/GoGvfqxgdl8ydtns+NAlAl1TCdE4IC
      P6iajOaXUa+dcJPXsFIRW/OqYIzh6OgIjx49Gmts1DAYV0AkUcTPfeY2/tnXHgAzIMr1Q68C
      /bgxNwrA2OVI02l0iOtnn8dR3ENzASYZ+vV9v2Mka/CUGgW3b15D8us/gekNr6zBplP0FSSr
      jcP2DL/PpDEnucFPFoge7vt+R7PbuEEzzYCr75jpVAq/9NnbYN5wPIlgx2UyU6jUkZrRxuXI
      Dtv9bhwsFGBCSCaT8DwPqqryZOAkQL7NOPjim6/gt965CcHrfWJRxVvYMQ1ncON2XBcK8JSC
      ojLEPXJdl88XjhOO44ydcGOM4TOvvIi1dG9xGGZARhij1OaGEWwuMEklEII3NK/p8qcVgiDw
      CTCyLMOyLG6yxIlxBI3AGMNGvv+IKmKWDvNeQd/gKibgNIQfAKRms9nVOzIc4gs6jb2a2UaV
      9NF1yV6kLF/4axq23ixB90k9+Ych1I0Cmjg/znUFQcBvfvmLOP/Xf4qHFz4QsRkyxnp2uY66
      HvCkIGeUZGQwBzDpTTkWKkSvRQZDjUR1oB0h6stxHD6e85MGxhj29/d5jiBuigTVNIwrMPVG
      A//n7/8H7Nd6y8RVur2F5wWHaeXB6TXTCoECE+4LFP55v1YVgiDw+VqfRPj+ZQfpTCaDi4uL
      2LukxdWRw0gk8OYLG9j/zuPIUwCI7vQwCIPIbvR713V5/6BpYOEETxGZTAamaaJQKMTOio1T
      YD7/2dfw0obcs4ySTNlRT+og7z/8RaYyTdacBjzPezYVIOiLTBPUIe7i4gKZTAalUik2wW23
      27F1yJMkEb/9a29jNdH7enElu6IwaUJcsP7gmVSAo6MjvPvuu/jRj3401OsZY3j8+HEswppI
      JJDP5/nk9Tg/6F4d9K4CXdfwc69dB7ze/XUmJaTB1pFxg/xNCszMDRVimmg2m9jc3OTsyXv3
      7kEURT7/13Ec6LqO3d1dOI6DGzdu4L333oPjONje3o6t0wNwWacQVysZSlbFVYr52svP46vf
      eYCK202TmLSNPolpMxSMCV7zmTwBAODs7AzFYhFHR0e4ffs259Q/evQIp6enkGUZqVQKt27d
      Qr1ex/r6eizCD1x+uLlcjjfPrVarqFbjoWRSp4s4oOs6vvT6jb6ngG3bT00IO8pseyYVgBI0
      NCnx/v37PAJFI4qAy6nvDx48QC6Xg2VZOD09jW0Noigik8nwSq5yuQzP8/hM4YuLC5yeno6c
      OBu2Zcqw+NnPvIysEr0Gmn0wSQWI69qULAxf75lUgJ2dHTz33HNYW1uDrusoFAo8yeP7Ph8Z
      mkql8NJLLyGZTOK1114b2A/oKshms5xBWiqVeAJRkiTouo5isTiyELTb7dgER1EUfOmN2xCt
      UuRJQOzPSeRuqKvFuKBnEdXJbyY1wVGgPEChUJh6Isw0Tei6DkEQeEPaXu3LJ4VGowHLssAY
      47XLlmWhXq/DMIyR7fp0Oh1rt+52u43/7Z/+MU5b0V0xJjUKadzrUsSn17N4Jp3gMIKtUqjt
      CZUZTgs04C6I4OzeURE1tHscVGsmSg3/qbMZBinQU3Y7zw5qtRpKpVLH3IFRQE1+4zKFUskk
      VtIS4EefzkHOz6yd4iD1ZlCzrYUCzCFarRbvYDdOj9VWqxWLOXnZoVrB//g3v4Qvv7YM0Y92
      ioPd6GYF8keCpM5+WCjAHIKmzBuGMbZdHSzuvyoqlQo8z0MqlcQvvv0m3noh3/OaxOScBmiX
      DzfXDTKNB2GhAHMI6isahxNrWdbYGdvV1dWOFixffONlLGnRdQFxk/yiEKTmh0szR1X2hQLM
      ITRNi7WgPu7i/EJ+CW+/vBk5b6zXxPmrIEyjD/47eNIQt4vGwY6iCAsFmEPouo5arRYbWzTO
      vADh86+/jM3UZDu4UW6GBJ2eBwl7r5OGknPD+CILBZhDKIqCfD6Pjz76qKvn59U0POAAAB1T
      SURBVFVAs87ihKZp+Nu/+nnIXmc98iSa3NIOT93wBplYwf6ig06DhQLMKRKJBO7evYvT09NY
      hJciS3FiKZdBUo0unZwH0EnR7yRYKMAcgzGGfD7Ph26PizgL8nd3H0EURWSN7gz1vNV4U44i
      CgsFmHPQWNQ4dlXLsmITzGvXtmHbNsr1bgebzKB5UoLgmoLrWijAnEPTtNhMF2KbxiGYgiDg
      4919lFrdQ7CjGvfOGrSecJuWhQI8BZBlOdaIUFy4sbOFlzY0+D8NS1KIclbzvoZBeAbBQgGe
      Aui6jpOTk1h2btqh44Cu6/hbv/pFpIT6TAfdDYNggo6yxK7rLhRg3kE7aqFQwNHRUSztFeP0
      BQzDwG/+tVeAIZvrzgphx5x4QgsFmHMIgoBqtQrTNJHL5YaaUjkI7XYbpmnGogSMMaRTBiTm
      w/fHb9E4SXRVgwnCQgHmHXR05/P5kaa/DIJt27Elx27sbOMrP3sdr28Cdwt+T8r0rBHVznNR
      EDPnmOSO2m63oarq2C3NGWN4681X8dabr6LdtvAHX/0GfrxXRt3T5tIfCGKhAHOOSSaVaCJm
      Mpkcu5UKCbqmqfjtX/8SypUK/v03v4dvfVCBPydD+MLPceEDzDFqtRqq1Srq9TqSyeTElEBV
      VTiOE/vsgmwmg//qy2/jb3zhOpJCq2ebxWmhVye7+VDNBTpAu34mk4GmabBtG8VisWOXjqte
      QJbl2BpphcEYwxc/+wqeu76Jf/BvvoHz9mTeZxCIGRqlAIsTYA5BmVSK2VPrFlVVed+icafC
      EKYxlHp1pYD/4Te+AFjmxN8rCNd1eZ+kXvmJhQLMIer1OpaXlzu6VRCzkYo+njYU8ku4s25M
      xRQKlkn6vs/7PS0aY00BcdTDSpLEZxtTj6LwTj3v0ZUwRFHEb/z8Z5FV42sJHwXqBEFfwbYy
      Uc9xoQAxwzAMpNPpK48rIrPn/Pwctm2j3W7zyqjga+JSgGmyNjfWVvCFF5bhOM5Qs8aCu/a4
      w8uDZZPB914oQMwwTZML7lVAneFM00Sz2eS8FVVVOzpExKUAcfYRHQZbawVIwuUpR7W900Rw
      njGwUIDYEVf5oe/70DSNt2wEJuewTpO+8NydW1g1XOCnbcqjFLnXjj/uSRCFhQJMCbqudzi1
      g8AYg6ZpvJN1vV7v+v24oPaPNLNsGpAkCb/5pdcA1+JrCJokvbo4B9fcDzTKtR8owvbMjkia
      Bdrt9kgnQ3B8bJytRghkClxcXEBV1ameAulUEhIc4Ke+DJUsOo7Dp0QCiKzl7aUc9PfhARi9
      wMf2jn87CwyDYexd+sAbjQZvm26aJlzXhWEYvEfoVUwB2u0VReGmR61WQzab5YI3LawsF/A7
      f/3TUP06X5skSfwr2NVhEKjCK9hCZZjTkRzjpy+g/JSjXC5jaWmpQ4jr9Trf6VutFhhjWFtb
      44PvaGfTNO3Kk9clScLZ2RkUReFt4AuFAr92rVZDKpWaSo6BMYbV1RWIXhsQos3CYF+fXspA
      vx9nrvBCAWYA6vJA9m6hUODDN8gkCZbtkaK0Wq0rdY0jUyqRSMAwDC4swev4vs9nEUxjSnt+
      aQnvfOYO/p/3igCLFnBSxl4tzoc1d/phoQBThqqqkGUZ+Xy+w743TROapiGbzcJ1XZimGenM
      XYW0JooiTNNEOp3uqzyu66JarXITJJVKTbTR7dufexXfvfdVFNv9cybhifLDdn4eBgsfYMpI
      JBI8V0A2a9DU8TwPrVYr1iHaJDDDhlEpYxpXB4le0HUd15YHR8ao+S0R2iRJihx3dBUsToAp
      gwSKjnfbtvmuTt/jEjqKsDQaDRiGMbJStdvtn7ZFj382GiGjAfAcYEDNQFDY48yELxRgivA8
      D9VqFWtra/B9H61Wq8sOHwcUCaHYOk2IGUdYbNvmM9QmMQOs4YgAm92MuoUCTAmu66Jer+Pa
      tWvczLkqDaGXUIuiiFKpBEVRuNNLTMhxKA+WZcFxHO4TxLX7NptN3Nu/AFh8tc6jYu4UgD6w
      Txocx0E6nea2PoCRZ3+R4FF2OFzIQidA0GQhZYmj6IVCtKIoQlGUsRSBlNJ2Z1tAPzcK4Ps+
      zs7Opk7OmhZc1x06wdNoNCI7QNi2Ddu2oes6PM/DxcUFgCftwCuVChhjKJfLPEoSzDdEdUWg
      n4dfS+sM/z1jjM9RHhf/xz/+16j7a72ioD0RZ3h2bhSAMYbl5WWsrq5+4k4AxhhUVYXrukMp
      OM1LjrqObduo1+vIZrMdgkBRnu3t7Yk+P2KmjiuEjDFsruRw8tgBsPABOKi/5CcJVJwxTFtC
      2s17vU4QBKTTaVQqFSiKAsuyeKc3Sq7FxRqNOjkYYyOR+vrhK1/+eXz4L7+G2nQZ0R2YOwX4
      JEIURTSbzaEyuL26FxCI90Jxek3TkEwmY3F2o9YCdCpAnKdLLpfFqzfz+MZ9EwidKMEqrkli
      oQATBhG8hi1iD7Ihe/2+UqkgnU5zofc8b6ByDeLVRKHXOhzHiY0ztJZPAqiilxk06WEbi0zw
      BBFMRA2LQSeAZVnQNK2jqinqGuHfXUWIetEN4pxA/5lPfwqaP/zziZuftFCACcL3/ZFLIwcl
      rqLIcMEiEjoRwn5UnIJDNb1xwLIdKPLsDJGFAkwIxL8fFcNw/cPCHKxwClKEgxh2cvqwoDqF
      cXFyWkTNGn5dsZdEPm3tNZ4WXNUhHRQBo90+CIochb8miWDF2jh47vYN5PXRFGmUgqBBXSUE
      z/M6eqcsMD7G7bQ86Pe9hJts9nE/y2EFbBSGab9r/Ne/8DoEZ/RGAv3WOOw9CPV6HY8ePYLr
      uk9lx7F5w7hUjkFOsOM4E9/dh8nDUPe1OGTm1o1reGFDv9JcgV7dI3q9tqszXCaTwc7ODiqV
      Cg4ODgBgoQhXgCAIvN52HPRq4kogvyKu3qBRGKUeNw6bXBRF/DdfeQfbqWiTcZQTbdQ1CZSe
      LxQK2NzcxNnZGY6Pj3n2coHhoKoqLMsaewrjMPRlwzAAXDqik8CwZlScvHzDMPDrf/UzkNGd
      zximg1z438HKsSC6ggP0DzrS1tbWsLKygsPDQ5ydnUGW5YkfuZ8ExBWdGHQCEBKJxJUL5OPC
      qLXJg3DrxjW89all+Fc0hYKZ62AzsX70kK4nTb0it7a2kMlksLe3h0qlslCEAYiTfzPsc06l
      UhM7BYbBMP09RwFjDL/wxc9gWbO7fj6Mg0/PLkgbp36g1IoxjJ5PmtLd165dg6qq2N3dRaPR
      WESM+iCO50K06WHfb5YnwCRkQdd1/NYvv4GEaI+sXMFnEVaYXqdl362GYtmqquL69etwHAd7
      e3u8oHuhCE9AQxjGDSCM8kxHOS0mgUl9/reub+N/+o03cSvnIS00oKKzOD98EriuC8uyBpII
      qQMdmUWO44Cdnp76wzq7dJycnZ2h2WxiY2ODt5seF4IgcB78J40OPQqoQdUwIEZoXPTkXiCH
      MiwniqJM9L2JSnJyWsQ/+cO/QMlOdLFGw7t+1L+JYEiJu2ACb6Ttw/M82LaNfD6P7e3toSNG
      giBAluW+XwtcYpRdtVfDqDgRdCzDJsmkNyrGLhsE71zbwv/y3/11bBktMK+ziUDY7g//jv4d
      9AvoO2NstBMgDDpSTk5OoCgKVlZWIgtaZFnGw4cP+wo6RT+oFDDIBw+X6wURvrHgzQZfP8nW
      HnFilBPAcRy0220eFp0EXNftWQg/6RMgai0/uvcRfv9r76PhKfxn/ZixQH9TcSyDlSIfm5ub
      sCwLjx49QjqdRi6X64oQyLKM7e3tvrsGNWSKG7VaLfZrTgqj7KqSJHW1TY8b/U4k27aHDtvG
      AVEU8cqLd7F7cIKv/bgMCOJAPhKZP71yFrGs3HEciKKInZ0dSJKEvb09tFqtjigB8UaIShv1
      Ne1pIQsMRr82KMEGttPEL7z1Bl7bkrCs2xAEoW/kbND6YlNdihjpuo5r167xE6EXPXeamMZ7
      B5vdjoNR1zrrBgKz+Fx1Xcff+c0v40s/cx2+53IlCCI4KbIfYif9kCJkMhksLS3h5OSED3qb
      FaYhJBSTH5cJ2mut5LTNU4QsDubpONhcX0ZOvo+yk4Drdw7DpiRY8HlFmUETM94oYrS8vIz1
      9fVJvc0zAVmWeW2xoigdwYRpCSDRCcK8m3G5T+Pg2tYm/v7f/RUorsk3h+DADABd03XCG8zE
      aZ9EmZ0lw/RpSdhF7fCqqnYJ2TTvJ2znh9971ieSoshI6SIs+0kR0Ehs0EktLIxZ2qrTeu84
      ClGC15AkKZJw5vs+31B0XZ9oJIjW1MvcmXXgQpZl/Po7LwPuE/5QkP4wCM8Eu21aCjBuONB1
      XV5TQONRe62dXkvNsSZ5KgRLLsOIqyZgHGxtrCEhtIDAOoj6MLUo0AKXuKogCoIA27ahKAo3
      e/rRjYOmySRZoYM4/+TrzRJLuSz+7q+8zrPEwdj/oProhQLMAQRBQDKZhCiKMAxjaJ4/CaYk
      SbFOlAmvbRBm7QdcgsHH6JvPM6EAsz6iByGRSEAURaiqirOzs6EjK8GdORzyiwvDnGi2PTp1
      OW7cuH4NL65dUnrCpmO/e3gmFOBpiAJZlgXXdZFIJHjb80GgznPApRJNsk64H2zb5r1PJ3US
      DYIsy2BiJ9dsqK4Qk1rQAsODBAi4NGcMwxiKv9Rut3lOgIiJs0Kr1YJpmqjVarAsayZm0Rsv
      3oDk1uG6ztCTbBYKMEPQxEMaRkeg6M6oJL5J+gLDgNq/l8tlmKY5dSV49aW7+Pu//XPIKZ3P
      oN9J8EwowLyaQL0E1vd9NJvNyCkxYVB1HgAkk8m5Yb42m03U6/Wp+gaMMayuLOPWWn96eMck
      nGksbIFuRBG4gMsPh9qfD1OnQXx9cvySySQqlQqq1erUaQqUL4ji4UwTr9y91lE40wu+7y8U
      YBYggY1SgGq1ikwmM1JSLWhzy7KMTCaDdDoNz/NQLpen6huQYy4IAizLQqlUQrPZnOoaXn3p
      edzMD1nmO+G1LBACTYePMn2oE0dcJpuu68hms6hWqzPZjanAqdFooF6vT00JBEHAF1+7DdG3
      Omgcka0Rp7KiBTioKCgKpmleubyRdt0oZLPZoUOrcSDckZkE8P3334+9mVYvvPLiXby8bXB6
      RK8u0Qsy3JTRby2TctYZY8jn8yiXyxO5fhhBfhB1kzg4OMDm5ubUTgFJkvBbv/o2NgwL8NyO
      4vmpO8HzGoV5lsAYQyKRmEqUKNiNTZZlzieSJAnNZnNq5pimafiff+sX8c4LWTDfiWyZ+EyY
      QPN0AvTDuHH8QRuNoigjDewbZx1E6qPdP51O892/VqtN7TMxDAP/5S+/hf/+yy8iLV+S9qhN
      jyAIz4YCPC0YJ45PmeBB7Edd13lDrbhBu7zjONjd3cV7772HDz/8ELlcDqlUigs9dXKbJl56
      4Tn87V9+lSsBYaEAc4Rx2o37IWevH0gY4yykoaq/4+Nj7O3tIZFI4JVXXsGdO3eQSCTQarU6
      Xt9sNqd+Mt+5eR2/+zc+Dw2Xa2GMLeYEzxsURYFt2yN3yyNOfpgF2UvIEokE2u02yuUyMpnM
      WH6aLMs4PDyE53lQFAWrq6swDKNDyMOnEtUYT7tUdqWQR0YDSB+fiRPgaXLCLcsaSfgVRel5
      f4OSaaqqIpPJoFKpjHQahDO+wCUx79q1aygUCrBtm/fqCZLSwso4C96SIAhYTis8PPpMKMDT
      gnK5jHQ6PfLf9SubHATGGDKZDFqtFsrl8kAHmTEGx3FQKpX4CfL48WMsLy/zTnHBEspwi/Lg
      WmehAIwxvHpnDQlcKvzCBJoTWJYFRVFGriuOw45m7HKmcTqdhm3bqFarfB3hUUO+7+P09BTr
      6+u8EZooikgmk1ygw75MMOxJvXsYY7yQZlInNHUsDBb2A8Bn33gD6Wwe/+z/fnehAPMA3/fR
      aDSQzWZH/tu4d9F+3bqJ52NZFjKZDBdsmo8WFDJqWtuvaJ7o05PqDv7Nv/xP2Fxfxh997dv4
      nb/1FaQDTYfv3r4BmX1nYQLNA6rV6pVMH2C6OY5ghImaZBHfJ7iObDaLUqnEC/dJCYKRKsIk
      w6Fvf+Fz+PDBI1QuzvCjH7+Pex8+5L9jjOHv/cY7zwYVYp7RbrevZPrEjWGL8F3X5Y2Po0CC
      LooizzUQVTtKBizLmphsMMaQ0GT8lTdfx/fe38Xv/eHX8fjklP/+2tb6J88ECnZUoAfbbre7
      woS9pon0mjMQtlOHsVt7vQddkzj7g3rsh53JSTiPYQXs9ZxKpRI2NjY6HOyovqXkTzQaDd4r
      NkrJSDEm5Qe88/ZbAICf9328+96PumosPnEKUC6Xoes6/z9jjLcaAQYnioKx86gjm15DPx/m
      9eHrApeJoGw2i0wmg2azGWkGBTvA0d9PgkwWtaMHxwoFIctyX38l+Axo4Em1Wu34fVjopzFj
      gDGG1199qevnnzgFkGW5QwHmFel0GhcXF1AUBbquQ5ZllMvlDkGgPkFXBXXq7pUko0iMLMsd
      5ZfhZrJBQc3lcrh//z5yuRyAJwk42lmDUR7adERRRKVSQTKZjBxY0SshFvfJEHWtT5wCBB/w
      PMP3fciyzKMlkiR17KoUISmVShAEAaqqQlXVvgIRDPednp5C0zTIsgxVVQF0DpCm1+u6HnnN
      4C5Nws0Y49GeYrEIXdfxwx/+EGtra1hbW4PneajX60gkEvjoo49w69Yt+L4PVVW5aSoIAur1
      OpLJJL/+LBtrfeIUYFzBt20bpVIJuVwu0tGj38WBZDLZMwJEQpfL5bjgBYlymqZBURT+f4q4
      0G6bz+c7dtooIe+lTL2eoSAIODw8xJ07d2BZFs7Pz7l/dXBwwIVfEASeXb537x62trbQbDZh
      2za2t7dxcHCAQqGAlZUV7lhHIZxBnoSfMNDw6lfBNI+gXfUqYIzhBz/4AQRBQKPR4Lsdheou
      Li7w4MED+L6P8/NzWJYF27ZRq9WuTCzrd1oFBYASVfTlOA4qlQp/nW3bME0TlUqFE88o/BgO
      RYa/hm1wS0mlYE/SfD6Pra0tAMCtW7f4aZVMJqGqKjY2NvgJkMvlcHR0hGw2y7PGQP+MNXGG
      JgWJjiBysIhSG+RziKKIarUKwzD4cTqvkGUZjuN07I7Dwvd9GIaBvb09PP/88/jggw/w6U9/
      Gh988AFEUUQ+n4fv+1zw3333XRQKBei6jqOjI3zuc58b+QQyDAOmaXZNhhzU2Zhs9nK5zDO5
      yWQSgiDANE2eBaX7GkbJong79H/GGDddggX46XQaR0dHKBQKEEURhUIBsixjfX0dnudheXkZ
      iqLwNdAAxXw+z9+HNtkoP2AQvXtcSJVKhQ+zI1vUdV2e4ibQB2VZFpLJZFd4LPiwRVFEu92G
      7/vQNG1ii4+CIAg8tj4qGGO4c+cOAOD73/8+L1D3fZ8PBn/8+DEeP37M7XFBELC6uopSqXTl
      9YbpBgCGpglks9mORJTneTAMA5VKpUOphinFjDKX6O9EUcTFxQXW19f5juz7Prf9aVNwXReV
      SgWu6/LP3vd9LC0tcb/G9/2uz8g0TSQSia7PjU6vSbFGJdo5guiV5CDHpVqtwvd9JBIJXvWz
      v78P4MmUE9qhTk9P+14zbvSyd4fFxx9/jEajgZs3b6JWq+GHP/whlpaWkEwm8d577yGZTCKd
      TnMCWC6XgyRJWF5evvJ7ZjKZLt+CTt+o/EEQ7XabbzbBvEe/2QJh9IvFB82kYDkhgdZIlkFw
      t2+1WlwhCbRRNhoNfl3aZKI2Ls/zeJOwYdsdDnO/fO1nZ2f+VY+YcrmMRCKB09NT7OzsdAws
      pl0peIRNo4+853loNBpTHeAcB0zT5KcuCW/QjAE6ZwKQwJDwBZ+34zhoNpu8Jrff7hnO0kbt
      /pIk8WZdwZMm+PpwsTmBfCMqk2y1WkgkEiiVSigUCh3vq6oqUqlUh+KTIpFZTooQF4Rxoib5
      fB77+/u4du1ah21MDg7Zd8FYdByIcuDoPno1nJp3GIbBWwlSZESSpI7EUpB/A1wmsBRF6Uha
      UfIslUpB0zS4rjtSmWXw2RJEUUSr1YKqqh2/C66plyNtGAYMw4Cu6/B9H6lUCgcHB0gmk3yo
      B5k57XYb1WqVX5M+R13XoaoqDMOIPRI0sioFH4Dnebh16xZOTk6mWnRCD5wq+8MCP+85gCgE
      o0EUjKjVaqhUKl3CVavVUKvVeISq40gP+Waqqg4cdj0IdLKHFTD8fdD9kULncjnuH1DEiq5P
      Jp3neSiVSh39Rcc1b8NwXffyBKAHHhwzGXVT4d/7vg9FUeA4ztQVIPjv4IcDPF0VYEGk02ku
      8FR4ous6KpUKarUa3yGTyST/sixrYBNaVVVRq9X6xtt7PTNFUVCpVJDNZrvC4Vd5zmS60f1S
      xCp4TVIKRVG4XE4CnudBCjo/4aOv3w1S/WepVOLO8SwQ3DkpEfS0gshjFHUyDAOiKCKdToMx
      hna73RVVo+ky1How2H2BQCZRq9WC4zgdoezgphH+O0EQ0Gq1UKvVsLGx0VXYPsqOTDQPQRCg
      6zrK5TIcx0E6nUaj0UAikYAkSV0jWSlqNInNTZKk7kxweHeNAjk0jUYD5+fnuHnz5lSTZeF5
      sOF1Pm0mEB33iUQCW1tbUFUVh4eHXfwcajJFCHJ0qN1Jo9GI5EL5/iUlodFodAl7vzyB4zhY
      Wloau9M0US4oyhP87DKZDOr1Os9nEKWCTKF6vc6d4zjBGLv0AcimHvaooV12d3cX29vbU88U
      085DO0q4QJuSYU8DKKxMjiJweRL0+rD7RXQGVWABl2YFdWumBJRlWWi1WqjX6x3BCt+/5Ao1
      m82RhE/TtA6OEY1PCkYJ6fr03TAMWJaFs7MzMMbQaDS4PLZaLbTbbTiOwzfduDY5oZ/29wLF
      /e/evYtyuTzzHZeEnx74tFoAxoFKpYJMJgNN0/gOSXH8sNANQxyjhGUvUP8ex3F4tI4G9GUy
      mY6dniJKtm0PHXqUZRnFYhG7u7vQdZ1TRTRN67inqPyGrutYWlqCaZodMkUEOtM00Wq1UK1W
      Y5tAM1IUiI4oURSftJb7aSYz/BUMp0WF1kZB0NENl9/1Wic5UPOEqBBikDpMJko42hLGIDrK
      oBNQkiSoqsoJdaIo8tBrWDAprDzsCUA1w8lkEvv7+9A0DRsbGzxnEbwnVVWh63pHbJ8SafR+
      lBcJJvY8z+Mn1zDy0A8j5Zc1TcPjx4851yZ4Q8Pa4aNm84LJH2B4x4tOgavW2k4CJNSMXVZW
      SZKETCbD7XvHcfjJRfZ/UBiC1+k3gYW6NYwqGL34OMMWrCiKgtPTU6ysrHBz5+LiAicnJ3jx
      xRe5TS+KIhRFgWmanEKys7PDzcFyuYzV1VVuNtG1HMfpSARSCxdSYgr5joKhFUAQBG47bm9v
      w7IsPhazWq1y7vkgBDOIvY7DQa8fBrPmmUeB1u+6LgzD4BEd2tGooSz5AL3ulzLEUfdnWRY0
      TbvSrhi+XvAZhtdCVgC9xrIsnq0lPpYgCFheXuaKnc1m+WuPjo7AGMP169dRKpVwdHTEcxvb
      29v4+OOPsbq6ina7jZOTEywvLyOVSsGyrK7ZacTWdRyni6c2CEMrAPF7zs/P+QcGgBdx1Gq1
      rihFFMJJjUGCfVX+R1TIcBB6hdqGDQ0PAt1ro9HgZZrhDDZlXUd5r2AYu91udzFLR11jcK0E
      URShaRpEUeQ78e7uLnzfx/r6OgzDwP7+PjY2NrgjTTyezc1NHB8fo1wu8+ssLy9DkiS0Wi2u
      RDdu3ODvubGxgf39fTiOg0996lN4+PAhLMtCKpXqUFQ6VUn5ms1mzyKfKIxMsWu325AkiXcj
      pg8w2J14GNDRHjQLonBVgWs2m8jlckPvhEFTKyhQYQQ58VGxcyC6JSFdO2i6RGVU6VkMum96
      1sHrUme5cX0t8gmovloQBHz44YfQNA2O4/D8wO3btyFJEj788ENcu3ato5lWEM1mE8vLyxBF
      kTNGfd/nWWyiSwQZsKVSCevr65BlGbZt4/r162g0Gtjf30cymcT6+jp83++aUt9qtbg5NAz+
      f3VZ6ytm28oFAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Percentage of Option per Price' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Production Year of Cars' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Region' width='192'>
      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
      s+f5/AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='50' name='Total Price (in SAR)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAAyCAYAAAAKhtQVAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAAoUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kPYBdgQEYFht7OgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Transmission' width='192'>
      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
    </thumbnail>
    <thumbnail height='63' name='Type' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAA/CAYAAAC2GMfLAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAAw0lEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDtA3u9BHrjY2ecAAAAAElFTkSu
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Used Cars Available Dashboard' width='192'>
      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
      kSZCPlC6VQAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
